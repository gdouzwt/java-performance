<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='79392' time_ms='1566738219534'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.45-b02
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.45-b02) for bsd-amd64 JRE (1.8.0_45-b14), built on Apr 10 2015 10:46:38 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+PrintCodeCache -XX:+PrintFlagsFinal -XX:+UnlockDiagnosticVMOptions -XX:+PrintCompilation -XX:+LogCompilation -XX:+PrintInlining -XX:+PrintAssembly -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=58383:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 
</args>
<command>
com.ibeetl.code.jit.HelloWorld
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.45-b02
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/xiandafu/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib
java.library.path=/Users/xiandafu/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMac
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.ibeetl.code.jit.HelloWorld
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='3331'/>
[Global flags]
    uintx AdaptiveSizeDecrementScaleFactor          = 4                                   {product}
    uintx AdaptiveSizeMajorGCDecayTimeScale         = 10                                  {product}
    uintx AdaptiveSizePausePolicy                   = 0                                   {product}
    uintx AdaptiveSizePolicyCollectionCostMargin    = 50                                  {product}
    uintx AdaptiveSizePolicyInitializingSteps       = 20                                  {product}
    uintx AdaptiveSizePolicyOutputInterval          = 0                                   {product}
    uintx AdaptiveSizePolicyWeight                  = 10                                  {product}
    uintx AdaptiveSizeThroughPutPolicy              = 0                                   {product}
    uintx AdaptiveTimeWeight                        = 25                                  {product}
     bool AdjustConcurrency                         = false                               {product}
     bool AggressiveOpts                            = false                               {product}
     intx AliasLevel                                = 3                                   {C2 product}
     bool AlignVector                               = false                               {C2 product}
     intx AllocateInstancePrefetchLines             = 1                                   {product}
     intx AllocatePrefetchDistance                  = 192                                 {product}
     intx AllocatePrefetchInstr                     = 3                                   {product}
     intx AllocatePrefetchLines                     = 4                                   {product}
     intx AllocatePrefetchStepSize                  = 64                                  {product}
     intx AllocatePrefetchStyle                     = 1                                   {product}
     bool AllowJNIEnvProxy                          = false                               {product}
     bool AllowNonVirtualCalls                      = false                               {product}
     bool AllowParallelDefineClass                  = false                               {product}
     bool AllowUserSignalHandlers                   = false                               {product}
     bool AlwaysActAsServerClassMachine             = false                               {product}
     bool AlwaysCompileLoopMethods                  = false                               {product}
     bool AlwaysLockClassLoader                     = false                               {product}
     bool AlwaysPreTouch                            = false                               {product}
     bool AlwaysRestoreFPU                          = false                               {product}
     bool AlwaysTenure                              = false                               {product}
     bool AssertOnSuspendWaitFailure                = false                               {product}
     bool AssumeMP                                  = false                               {product}
     intx AutoBoxCacheMax                           = 128                                 {C2 product}
    uintx AutoGCSelectPauseMillis                   = 5000                                {product}
     intx BCEATraceLevel                            = 0                                   {product}
     intx BackEdgeThreshold                         = 100000                              {pd product}
     bool BackgroundCompilation                     = true                                {pd product}
    uintx BaseFootPrintEstimate                     = 268435456                           {product}
     intx BiasedLockingBulkRebiasThreshold          = 20                                  {product}
     intx BiasedLockingBulkRevokeThreshold          = 40                                  {product}
     intx BiasedLockingDecayTime                    = 25000                               {product}
     intx BiasedLockingStartupDelay                 = 4000                                {product}
     bool BindCMSThreadToCPU                        = false                               {diagnostic}
     bool BindGCTaskThreadsToCPUs                   = false                               {product}
     bool BlockLayoutByFrequency                    = true                                {C2 product}
     intx BlockLayoutMinDiamondPercentage           = 20                                  {C2 product}
     bool BlockLayoutRotateLoops                    = true                                {C2 product}
     bool BlockOffsetArrayUseUnallocatedBlock       = false                               {diagnostic}
     bool BranchOnRegister                          = false                               {C2 product}
     bool BytecodeVerificationLocal                 = false                               {product}
     bool BytecodeVerificationRemote                = true                                {product}
     bool C1OptimizeVirtualCallProfiling            = true                                {C1 product}
     bool C1PatchInvokeDynamic                      = true                                {C1 diagnostic}
     bool C1ProfileBranches                         = true                                {C1 product}
     bool C1ProfileCalls                            = true                                {C1 product}
     bool C1ProfileCheckcasts                       = true                                {C1 product}
     bool C1ProfileInlinedCalls                     = true                                {C1 product}
     bool C1ProfileVirtualCalls                     = true                                {C1 product}
     bool C1UpdateMethodData                        = true                                {C1 product}
     intx CICompilerCount                          := 3                                   {product}
     bool CICompilerCountPerCPU                     = true                                {product}
     bool CITime                                    = false                               {product}
     bool CMSAbortSemantics                         = false                               {product}
    uintx CMSAbortablePrecleanMinWorkPerIteration   = 100                                 {product}
     intx CMSAbortablePrecleanWaitMillis            = 100                                 {manageable}
    uintx CMSBitMapYieldQuantum                     = 10485760                            {product}
    uintx CMSBootstrapOccupancy                     = 50                                  {product}
     bool CMSClassUnloadingEnabled                  = true                                {product}
    uintx CMSClassUnloadingMaxInterval              = 0                                   {product}
     bool CMSCleanOnEnter                           = true                                {product}
     bool CMSCompactWhenClearAllSoftRefs            = true                                {product}
    uintx CMSConcMarkMultiple                       = 32                                  {product}
     bool CMSConcurrentMTEnabled                    = true                                {product}
    uintx CMSCoordinatorYieldSleepCount             = 10                                  {product}
     bool CMSDumpAtPromotionFailure                 = false                               {product}
     bool CMSEdenChunksRecordAlways                 = true                                {product}
    uintx CMSExpAvgFactor                           = 50                                  {product}
     bool CMSExtrapolateSweep                       = false                               {product}
    uintx CMSFullGCsBeforeCompaction                = 0                                   {product}
    uintx CMSIncrementalDutyCycle                   = 10                                  {product}
    uintx CMSIncrementalDutyCycleMin                = 0                                   {product}
     bool CMSIncrementalMode                        = false                               {product}
    uintx CMSIncrementalOffset                      = 0                                   {product}
     bool CMSIncrementalPacing                      = true                                {product}
    uintx CMSIncrementalSafetyFactor                = 10                                  {product}
    uintx CMSIndexedFreeListReplenish               = 4                                   {product}
     intx CMSInitiatingOccupancyFraction            = -1                                  {product}
    uintx CMSIsTooFullPercentage                    = 98                                  {product}
   double CMSLargeCoalSurplusPercent                = 0.950000                            {product}
   double CMSLargeSplitSurplusPercent               = 1.000000                            {product}
     bool CMSLoopWarn                               = false                               {product}
    uintx CMSMaxAbortablePrecleanLoops              = 0                                   {product}
     intx CMSMaxAbortablePrecleanTime               = 5000                                {product}
    uintx CMSOldPLABMax                             = 1024                                {product}
    uintx CMSOldPLABMin                             = 16                                  {product}
    uintx CMSOldPLABNumRefills                      = 4                                   {product}
    uintx CMSOldPLABReactivityFactor                = 2                                   {product}
     bool CMSOldPLABResizeQuicker                   = false                               {product}
    uintx CMSOldPLABToleranceFactor                 = 4                                   {product}
     bool CMSPLABRecordAlways                       = true                                {product}
    uintx CMSParPromoteBlocksToClaim                = 16                                  {product}
     bool CMSParallelInitialMarkEnabled             = true                                {product}
     bool CMSParallelRemarkEnabled                  = true                                {product}
     bool CMSParallelSurvivorRemarkEnabled          = true                                {product}
    uintx CMSPrecleanDenominator                    = 3                                   {product}
    uintx CMSPrecleanIter                           = 3                                   {product}
    uintx CMSPrecleanNumerator                      = 2                                   {product}
     bool CMSPrecleanRefLists1                      = true                                {product}
     bool CMSPrecleanRefLists2                      = false                               {product}
     bool CMSPrecleanSurvivors1                     = false                               {product}
     bool CMSPrecleanSurvivors2                     = true                                {product}
    uintx CMSPrecleanThreshold                      = 1000                                {product}
     bool CMSPrecleaningEnabled                     = true                                {product}
     bool CMSPrintChunksInDump                      = false                               {product}
     bool CMSPrintEdenSurvivorChunks                = false                               {product}
     bool CMSPrintObjectsInDump                     = false                               {product}
    uintx CMSRemarkVerifyVariant                    = 1                                   {product}
     bool CMSReplenishIntermediate                  = true                                {product}
    uintx CMSRescanMultiple                         = 32                                  {product}
    uintx CMSSamplingGrain                          = 16384                               {product}
     bool CMSScavengeBeforeRemark                   = false                               {product}
    uintx CMSScheduleRemarkEdenPenetration          = 50                                  {product}
    uintx CMSScheduleRemarkEdenSizeThreshold        = 2097152                             {product}
    uintx CMSScheduleRemarkSamplingRatio            = 5                                   {product}
   double CMSSmallCoalSurplusPercent                = 1.050000                            {product}
   double CMSSmallSplitSurplusPercent               = 1.100000                            {product}
     bool CMSSplitIndexedFreeListBlocks             = true                                {product}
     intx CMSTriggerInterval                        = -1                                  {manageable}
    uintx CMSTriggerRatio                           = 80                                  {product}
     intx CMSWaitDuration                           = 2000                                {manageable}
    uintx CMSWorkQueueDrainThreshold                = 10                                  {product}
     bool CMSYield                                  = true                                {product}
    uintx CMSYieldSleepCount                        = 0                                   {product}
    uintx CMSYoungGenPerWorker                      = 67108864                            {pd product}
    uintx CMS_FLSPadding                            = 1                                   {product}
    uintx CMS_FLSWeight                             = 75                                  {product}
    uintx CMS_SweepPadding                          = 1                                   {product}
    uintx CMS_SweepTimerThresholdMillis             = 10                                  {product}
    uintx CMS_SweepWeight                           = 75                                  {product}
    uintx CPUForCMSThread                           = 0                                   {diagnostic}
     bool CheckEndorsedAndExtDirs                   = false                               {product}
     bool CheckJNICalls                             = false                               {product}
     bool ClassUnloading                            = true                                {product}
     bool ClassUnloadingWithConcurrentMark          = true                                {product}
     intx ClearFPUAtPark                            = 0                                   {product}
     bool ClipInlining                              = true                                {product}
    uintx CodeCacheExpansionSize                    = 65536                               {pd product}
    uintx CodeCacheMinimumFreeSpace                 = 512000                              {product}
     bool CollectGen0First                          = false                               {product}
     bool CompactFields                             = true                                {product}
     intx CompilationPolicyChoice                   = 3                                   {product}
ccstrlist CompileCommand                            =                                     {product}
    ccstr CompileCommandFile                        =                                     {product}
ccstrlist CompileOnly                               =                                     {product}
     intx CompileThreshold                          = 10000                               {pd product}
     bool CompilerThreadHintNoPreempt               = true                                {product}
     intx CompilerThreadPriority                    = -1                                  {product}
     intx CompilerThreadStackSize                   = 0                                   {pd product}
    uintx CompressedClassSpaceSize                  = 1073741824                          {product}
    uintx ConcGCThreads                             = 0                                   {product}
     intx ConditionalMoveLimit                      = 3                                   {C2 pd product}
     intx ContendedPaddingWidth                     = 128                                 {product}
     bool ConvertSleepToYield                       = true                                {pd product}
     bool ConvertYieldToSleep                       = false                               {product}
     bool CreateMinidumpOnCrash                     = false                               {product}
     bool CriticalJNINatives                        = true                                {product}
     bool DTraceAllocProbes                         = false                               {product}
     bool DTraceMethodProbes                        = false                               {product}
     bool DTraceMonitorProbes                       = false                               {product}
     bool DebugInlinedCalls                         = true                                {C2 diagnostic}
     bool DebugNonSafepoints                        = true                                {diagnostic}
     bool Debugging                                 = false                               {product}
    uintx DefaultMaxRAMFraction                     = 4                                   {product}
     intx DefaultThreadPriority                     = -1                                  {product}
     bool DeferInitialCardMark                      = false                               {diagnostic}
     intx DeferPollingPageLoopCount                 = -1                                  {product}
     intx DeferThrSuspendLoopCount                  = 4000                                {product}
     bool DeoptimizeRandom                          = false                               {product}
     bool DisableAttachMechanism                    = false                               {product}
     bool DisableExplicitGC                         = false                               {product}
ccstrlist DisableIntrinsic                          =                                     {C2 diagnostic}
     bool DisplayVMOutput                           = true                                {diagnostic}
     bool DisplayVMOutputToStderr                   = false                               {product}
     bool DisplayVMOutputToStdout                   = false                               {product}
     bool DoEscapeAnalysis                          = true                                {C2 product}
     intx DominatorSearchLimit                      = 1000                                {C2 diagnostic}
     bool DontCompileHugeMethods                    = true                                {product}
     bool DontYieldALot                             = false                               {pd product}
    ccstr DumpLoadedClassList                       =                                     {product}
     bool DumpReplayDataOnError                     = true                                {product}
     bool DumpSharedSpaces                          = false                               {product}
     bool EagerXrunInit                             = false                               {product}
     intx EliminateAllocationArraySizeLimit         = 64                                  {C2 product}
     bool EliminateAllocations                      = true                                {C2 product}
     bool EliminateAutoBox                          = true                                {C2 product}
     bool EliminateLocks                            = true                                {C2 product}
     bool EliminateNestedLocks                      = true                                {C2 product}
     intx EmitSync                                  = 0                                   {product}
     bool EnableContended                           = true                                {product}
     bool EnableInvokeDynamic                       = true                                {diagnostic}
     bool EnableSharedLookupCache                   = true                                {product}
     bool EnableTracing                             = false                               {product}
    uintx ErgoHeapSizeLimit                         = 0                                   {product}
    ccstr ErrorFile                                 =                                     {product}
    ccstr ErrorReportServer                         =                                     {product}
   double EscapeAnalysisTimeout                     = 20.000000                           {C2 product}
     bool EstimateArgEscape                         = true                                {product}
     bool ExplicitGCInvokesConcurrent               = false                               {product}
     bool ExplicitGCInvokesConcurrentAndUnloadsClasses  = false                               {product}
     bool ExtendedDTraceProbes                      = false                               {product}
    ccstr ExtraSharedClassListFile                  =                                     {product}
     bool FLSAlwaysCoalesceLarge                    = false                               {product}
    uintx FLSCoalescePolicy                         = 2                                   {product}
   double FLSLargestBlockCoalesceProximity          = 0.990000                            {product}
     bool FLSVerifyAllHeapReferences                = false                               {diagnostic}
     bool FLSVerifyIndexTable                       = false                               {diagnostic}
     bool FLSVerifyLists                            = false                               {diagnostic}
     bool FailOverToOldVerifier                     = true                                {product}
     bool FastTLABRefill                            = true                                {product}
     intx FenceInstruction                          = 0                                   {ARCH product}
     intx FieldsAllocationStyle                     = 1                                   {product}
     bool FilterSpuriousWakeups                     = true                                {product}
    ccstr FlightRecorderOptions                     =                                     {product}
     bool FoldStableValues                          = true                                {diagnostic}
     bool ForceDynamicNumberOfGCThreads             = false                               {diagnostic}
     bool ForceNUMA                                 = false                               {product}
     bool ForceTimeHighResolution                   = false                               {product}
     bool ForceUnreachable                          = false                               {diagnostic}
     intx FreqInlineSize                            = 325                                 {pd product}
   double G1ConcMarkStepDurationMillis              = 10.000000                           {product}
    uintx G1ConcRSHotCardLimit                      = 4                                   {product}
    uintx G1ConcRSLogCacheSize                      = 10                                  {product}
     intx G1ConcRefinementGreenZone                 = 0                                   {product}
     intx G1ConcRefinementRedZone                   = 0                                   {product}
     intx G1ConcRefinementServiceIntervalMillis     = 300                                 {product}
    uintx G1ConcRefinementThreads                   = 0                                   {product}
     intx G1ConcRefinementThresholdStep             = 0                                   {product}
     intx G1ConcRefinementYellowZone                = 0                                   {product}
    uintx G1ConfidencePercent                       = 50                                  {product}
    uintx G1HeapRegionSize                          = 0                                   {product}
    uintx G1HeapWastePercent                        = 5                                   {product}
    uintx G1MixedGCCountTarget                      = 8                                   {product}
     bool G1PrintHeapRegions                        = false                               {diagnostic}
     bool G1PrintRegionLivenessInfo                 = false                               {diagnostic}
     intx G1RSetRegionEntries                       = 0                                   {product}
    uintx G1RSetScanBlockSize                       = 64                                  {product}
     intx G1RSetSparseRegionEntries                 = 0                                   {product}
     intx G1RSetUpdatingPauseTimePercent            = 10                                  {product}
     intx G1RefProcDrainInterval                    = 10                                  {product}
    uintx G1ReservePercent                          = 10                                  {product}
    uintx G1SATBBufferEnqueueingThresholdPercent    = 60                                  {product}
     intx G1SATBBufferSize                          = 1024                                {product}
     bool G1SummarizeConcMark                       = false                               {diagnostic}
     bool G1SummarizeRSetStats                      = false                               {diagnostic}
     intx G1SummarizeRSetStatsPeriod                = 0                                   {diagnostic}
     bool G1TraceConcRefinement                     = false                               {diagnostic}
     intx G1UpdateBufferSize                        = 256                                 {product}
     bool G1UseAdaptiveConcRefinement               = true                                {product}
     bool G1VerifyHeapRegionCodeRoots               = false                               {diagnostic}
     bool G1VerifyRSetsDuringFullGC                 = false                               {diagnostic}
    uintx GCDrainStackTargetSize                    = 64                                  {product}
    uintx GCHeapFreeLimit                           = 2                                   {product}
    uintx GCLockerEdenExpansionPercent              = 5                                   {product}
     bool GCLockerInvokesConcurrent                 = false                               {product}
     intx GCLockerRetryAllocationCount              = 2                                   {diagnostic}
    uintx GCLogFileSize                             = 8192                                {product}
     bool GCParallelVerificationEnabled             = true                                {diagnostic}
    uintx GCPauseIntervalMillis                     = 0                                   {product}
    uintx GCTaskTimeStampEntries                    = 200                                 {product}
    uintx GCTimeLimit                               = 98                                  {product}
    uintx GCTimeRatio                               = 99                                  {product}
     intx GuaranteedSafepointInterval               = 1000                                {diagnostic}
    uintx HeapBaseMinAddress                        = 2147483648                          {pd product}
     bool HeapDumpAfterFullGC                       = false                               {manageable}
     bool HeapDumpBeforeFullGC                      = false                               {manageable}
     bool HeapDumpOnOutOfMemoryError                = false                               {manageable}
    ccstr HeapDumpPath                              =                                     {manageable}
    uintx HeapFirstMaximumCompactionCount           = 3                                   {product}
    uintx HeapMaximumCompactionInterval             = 20                                  {product}
    uintx HeapSizePerGCThread                       = 87241520                            {product}
     bool IgnoreEmptyClassPaths                     = false                               {product}
     bool IgnoreUnrecognizedVMOptions               = false                               {product}
     bool IgnoreUnverifiableClassesDuringDump       = false                               {diagnostic}
    uintx IncreaseFirstTierCompileThresholdAt       = 50                                  {product}
     bool IncrementalInline                         = true                                {C2 product}
    uintx InitialBootClassLoaderMetaspaceSize       = 4194304                             {product}
    uintx InitialCodeCacheSize                      = 2555904                             {pd product}
    uintx InitialHeapSize                          := 134217728                           {product}
    uintx InitialRAMFraction                        = 64                                  {product}
    uintx InitialSurvivorRatio                      = 8                                   {product}
    uintx InitialTenuringThreshold                  = 7                                   {product}
    uintx InitiatingHeapOccupancyPercent            = 45                                  {product}
     bool Inline                                    = true                                {product}
    ccstr InlineDataFile                            =                                     {product}
     intx InlineSmallCode                           = 2000                                {pd product}
     bool InlineSynchronizedMethods                 = true                                {C1 product}
     bool InsertMemBarAfterArraycopy                = true                                {C2 product}
     intx InteriorEntryAlignment                    = 16                                  {C2 pd product}
     intx InterpreterProfilePercentage              = 33                                  {product}
     bool JNIDetachReleasesMonitors                 = true                                {product}
     bool JavaMonitorsInStackTrace                  = true                                {product}
     intx JavaPriority10_To_OSPriority              = -1                                  {product}
     intx JavaPriority1_To_OSPriority               = -1                                  {product}
     intx JavaPriority2_To_OSPriority               = -1                                  {product}
     intx JavaPriority3_To_OSPriority               = -1                                  {product}
     intx JavaPriority4_To_OSPriority               = -1                                  {product}
     intx JavaPriority5_To_OSPriority               = -1                                  {product}
     intx JavaPriority6_To_OSPriority               = -1                                  {product}
     intx JavaPriority7_To_OSPriority               = -1                                  {product}
     intx JavaPriority8_To_OSPriority               = -1                                  {product}
     intx JavaPriority9_To_OSPriority               = -1                                  {product}
     bool LIRFillDelaySlots                         = false                               {C1 pd product}
    uintx LargePageHeapSizeThreshold                = 134217728                           {product}
    uintx LargePageSizeInBytes                      = 0                                   {product}
     bool LazyBootClassLoader                       = true                                {product}
     intx LiveNodeCountInliningCutoff               = 40000                               {C2 product}
     bool LogCommercialFeatures                     = false                               {product}
     bool LogCompilation                           := true                                {diagnostic}
     bool LogEvents                                 = true                                {diagnostic}
    uintx LogEventsBufferEntries                    = 10                                  {diagnostic}
    ccstr LogFile                                   =                                     {diagnostic}
     bool LogVMOutput                               = false                               {diagnostic}
     bool LoopLimitCheck                            = true                                {C2 diagnostic}
     intx LoopMaxUnroll                             = 16                                  {C2 product}
     intx LoopOptsCount                             = 43                                  {C2 product}
     intx LoopUnrollLimit                           = 60                                  {C2 pd product}
     intx LoopUnrollMin                             = 4                                   {C2 product}
     bool LoopUnswitching                           = true                                {C2 product}
    uintx MallocMaxTestWords                        = 0                                   {diagnostic}
     intx MallocVerifyInterval                      = 0                                   {diagnostic}
     intx MallocVerifyStart                         = 0                                   {diagnostic}
     bool ManagementServer                          = false                               {product}
    uintx MarkStackSize                             = 4194304                             {product}
    uintx MarkStackSizeMax                          = 536870912                           {product}
    uintx MarkSweepAlwaysCompactCount               = 4                                   {product}
    uintx MarkSweepDeadRatio                        = 1                                   {product}
     intx MaxBCEAEstimateLevel                      = 5                                   {product}
     intx MaxBCEAEstimateSize                       = 150                                 {product}
    uintx MaxDirectMemorySize                       = 0                                   {product}
     bool MaxFDLimit                                = true                                {product}
    uintx MaxGCMinorPauseMillis                     = 18446744073709551615                    {product}
    uintx MaxGCPauseMillis                          = 18446744073709551615                    {product}
    uintx MaxHeapFreeRatio                          = 100                                 {manageable}
    uintx MaxHeapSize                              := 2147483648                          {product}
     intx MaxInlineLevel                            = 9                                   {product}
     intx MaxInlineSize                             = 35                                  {product}
     intx MaxJNILocalCapacity                       = 65536                               {product}
     intx MaxJavaStackTraceDepth                    = 1024                                {product}
     intx MaxJumpTableSize                          = 65000                               {C2 product}
     intx MaxJumpTableSparseness                    = 5                                   {C2 product}
     intx MaxLabelRootDepth                         = 1100                                {C2 product}
     intx MaxLoopPad                                = 11                                  {C2 product}
    uintx MaxMetaspaceExpansion                     = 5451776                             {product}
    uintx MaxMetaspaceFreeRatio                     = 70                                  {product}
    uintx MaxMetaspaceSize                          = 18446744073709547520                    {product}
    uintx MaxNewSize                               := 715653120                           {product}
     intx MaxNodeLimit                              = 75000                               {C2 product}
 uint64_t MaxRAM                                    = 137438953472                        {pd product}
    uintx MaxRAMFraction                            = 4                                   {product}
     intx MaxRecursiveInlineLevel                   = 1                                   {product}
    uintx MaxTenuringThreshold                      = 15                                  {product}
     intx MaxTrivialSize                            = 6                                   {product}
     intx MaxVectorSize                             = 32                                  {C2 product}
    uintx MetaspaceSize                             = 21807104                            {pd product}
     bool MethodFlushing                            = true                                {product}
    uintx MinHeapDeltaBytes                        := 524288                              {product}
    uintx MinHeapFreeRatio                          = 0                                   {manageable}
     intx MinInliningThreshold                      = 250                                 {product}
     intx MinJumpTableSize                          = 10                                  {C2 pd product}
    uintx MinMetaspaceExpansion                     = 339968                              {product}
    uintx MinMetaspaceFreeRatio                     = 40                                  {product}
    uintx MinRAMFraction                            = 2                                   {product}
    uintx MinSurvivorRatio                          = 3                                   {product}
    uintx MinTLABSize                               = 2048                                {product}
     intx MonitorBound                              = 0                                   {product}
     bool MonitorInUseLists                         = false                               {product}
     intx MultiArrayExpandLimit                     = 6                                   {C2 product}
     bool MustCallLoadClassInternal                 = false                               {product}
    uintx NUMAChunkResizeWeight                     = 20                                  {product}
    uintx NUMAInterleaveGranularity                 = 2097152                             {product}
    uintx NUMAPageScanRate                          = 256                                 {product}
    uintx NUMASpaceResizeRate                       = 1073741824                          {product}
     bool NUMAStats                                 = false                               {product}
    ccstr NativeMemoryTracking                      = off                                 {product}
     bool NeedsDeoptSuspend                         = false                               {pd product}
     bool NeverActAsServerClassMachine              = false                               {pd product}
     bool NeverTenure                               = false                               {product}
    uintx NewRatio                                  = 2                                   {product}
    uintx NewSize                                  := 44564480                            {product}
    uintx NewSizeThreadIncrease                     = 5320                                {pd product}
     intx NmethodSweepActivity                      = 10                                  {product}
     intx NmethodSweepCheckInterval                 = 5                                   {product}
     intx NmethodSweepFraction                      = 16                                  {product}
     intx NodeLimitFudgeFactor                      = 2000                                {C2 product}
    uintx NumberOfGCLogFiles                        = 0                                   {product}
     intx NumberOfLoopInstrToAlign                  = 4                                   {C2 product}
     intx ObjectAlignmentInBytes                    = 8                                   {lp64_product}
    uintx OldPLABSize                               = 1024                                {product}
    uintx OldPLABWeight                             = 50                                  {product}
    uintx OldSize                                  := 89653248                            {product}
     bool OmitStackTraceInFastThrow                 = true                                {product}
ccstrlist OnError                                   =                                     {product}
ccstrlist OnOutOfMemoryError                        =                                     {product}
     intx OnStackReplacePercentage                  = 140                                 {pd product}
     bool OptimizeExpensiveOps                      = true                                {C2 diagnostic}
     bool OptimizeFill                              = true                                {C2 product}
     bool OptimizePtrCompare                        = true                                {C2 product}
     bool OptimizeStringConcat                      = true                                {C2 product}
     bool OptoBundling                              = false                               {C2 pd product}
     intx OptoLoopAlignment                         = 16                                  {pd product}
     bool OptoScheduling                            = false                               {C2 pd product}
    uintx PLABWeight                                = 75                                  {product}
     bool PSChunkLargeArrays                        = true                                {product}
     intx ParGCArrayScanChunk                       = 50                                  {product}
     intx ParGCCardsPerStrideChunk                  = 256                                 {diagnostic}
    uintx ParGCDesiredObjsFromOverflowList          = 20                                  {product}
    uintx ParGCStridesPerThread                     = 2                                   {diagnostic}
     bool ParGCTrimOverflow                         = true                                {product}
     bool ParGCUseLocalOverflow                     = false                               {product}
    uintx ParallelGCBufferWastePct                  = 10                                  {product}
     bool ParallelGCRetainPLAB                      = false                               {diagnostic}
    uintx ParallelGCThreads                         = 4                                   {product}
     bool ParallelGCVerbose                         = false                               {product}
    uintx ParallelOldDeadWoodLimiterMean            = 50                                  {product}
    uintx ParallelOldDeadWoodLimiterStdDev          = 80                                  {product}
     bool ParallelRefProcBalancingEnabled           = true                                {product}
     bool ParallelRefProcEnabled                    = false                               {product}
     bool PartialPeelAtUnsignedTests                = true                                {C2 product}
     bool PartialPeelLoop                           = true                                {C2 product}
     intx PartialPeelNewPhiDelta                    = 0                                   {C2 product}
     bool PauseAtExit                               = false                               {diagnostic}
     bool PauseAtStartup                            = false                               {diagnostic}
    ccstr PauseAtStartupFile                        =                                     {diagnostic}
    uintx PausePadding                              = 1                                   {product}
     intx PerBytecodeRecompilationCutoff            = 200                                 {product}
     intx PerBytecodeTrapLimit                      = 4                                   {product}
     intx PerMethodRecompilationCutoff              = 400                                 {product}
     intx PerMethodTrapLimit                        = 100                                 {product}
     bool PerfAllowAtExitRegistration               = false                               {product}
     bool PerfBypassFileSystemCheck                 = false                               {product}
     intx PerfDataMemorySize                        = 32768                               {product}
     intx PerfDataSamplingInterval                  = 50                                  {product}
    ccstr PerfDataSaveFile                          =                                     {product}
     bool PerfDataSaveToFile                        = false                               {product}
     bool PerfDisableSharedMem                      = false                               {product}
     intx PerfMaxStringConstLength                  = 1024                                {product}
     intx PreInflateSpin                            = 10                                  {pd product}
     bool PreferInterpreterNativeStubs              = false                               {pd product}
     intx PrefetchCopyIntervalInBytes               = 576                                 {product}
     intx PrefetchFieldsAhead                       = 1                                   {product}
     intx PrefetchScanIntervalInBytes               = 576                                 {product}
     bool PreserveAllAnnotations                    = false                               {product}
    uintx PretenureSizeThreshold                    = 0                                   {product}
     bool PrintAdapterHandlers                      = false                               {diagnostic}
     bool PrintAdaptiveSizePolicy                   = false                               {product}
     bool PrintAssembly                            := true                                {diagnostic}
    ccstr PrintAssemblyOptions                      =                                     {diagnostic}
     bool PrintBiasedLockingStatistics              = false                               {diagnostic}
     bool PrintCMSInitiationStatistics              = false                               {product}
     intx PrintCMSStatistics                        = 0                                   {product}
     bool PrintClassHistogram                       = false                               {manageable}
     bool PrintClassHistogramAfterFullGC            = false                               {manageable}
     bool PrintClassHistogramBeforeFullGC           = false                               {manageable}
     bool PrintCodeCache                           := true                                {product}
     bool PrintCodeCacheOnCompilation               = false                               {product}
     bool PrintCommandLineFlags                     = false                               {product}
     bool PrintCompilation                         := true                                {product}
     bool PrintCompilation2                         = false                               {diagnostic}
     bool PrintCompressedOopsMode                   = false                               {diagnostic}
     bool PrintConcurrentLocks                      = false                               {manageable}
     bool PrintDTraceDOF                            = false                               {diagnostic}
     intx PrintFLSCensus                            = 0                                   {product}
     intx PrintFLSStatistics                        = 0                                   {product}
     bool PrintFlagsFinal                          := true                                {product}
     bool PrintFlagsInitial                         = false                               {product}
     bool PrintGC                                   = false                               {manageable}
     bool PrintGCApplicationConcurrentTime          = false                               {product}
     bool PrintGCApplicationStoppedTime             = false                               {product}
     bool PrintGCCause                              = true                                {product}
     bool PrintGCDateStamps                         = false                               {manageable}
     bool PrintGCDetails                            = false                               {manageable}
     bool PrintGCID                                 = false                               {manageable}
     bool PrintGCTaskTimeStamps                     = false                               {product}
     bool PrintGCTimeStamps                         = false                               {manageable}
     bool PrintHeapAtGC                             = false                               {product rw}
     bool PrintHeapAtGCExtended                     = false                               {product rw}
     bool PrintHeapAtSIGBREAK                       = true                                {product}
     bool PrintInlining                            := true                                {diagnostic}
     bool PrintInterpreter                          = false                               {diagnostic}
     bool PrintIntrinsics                           = false                               {C2 diagnostic}
     bool PrintJNIGCStalls                          = false                               {product}
     bool PrintJNIResolving                         = false                               {product}
     bool PrintMethodFlushingStatistics             = false                               {diagnostic}
     bool PrintMethodHandleStubs                    = false                               {diagnostic}
     bool PrintNMTStatistics                        = false                               {diagnostic}
     bool PrintNMethods                             = false                               {diagnostic}
     bool PrintNativeNMethods                       = false                               {diagnostic}
     bool PrintOldPLAB                              = false                               {product}
     bool PrintOopAddress                           = false                               {product}
     bool PrintPLAB                                 = false                               {product}
     bool PrintParallelOldGCPhaseTimes              = false                               {product}
     bool PrintPreciseBiasedLockingStatistics       = false                               {C2 diagnostic}
     bool PrintPreciseRTMLockingStatistics          = false                               {C2 diagnostic}
     bool PrintPromotionFailure                     = false                               {product}
     bool PrintReferenceGC                          = false                               {product}
     bool PrintSafepointStatistics                  = false                               {product}
     intx PrintSafepointStatisticsCount             = 300                                 {product}
     intx PrintSafepointStatisticsTimeout           = -1                                  {product}
     bool PrintSharedArchiveAndExit                 = false                               {product}
     bool PrintSharedDictionary                     = false                               {product}
     bool PrintSharedSpaces                         = false                               {product}
     bool PrintSignatureHandlers                    = false                               {diagnostic}
     bool PrintStringDeduplicationStatistics        = false                               {product}
     bool PrintStringTableStatistics                = false                               {product}
     bool PrintStubCode                             = false                               {diagnostic}
     bool PrintTLAB                                 = false                               {product}
     bool PrintTenuringDistribution                 = false                               {product}
     bool PrintTieredEvents                         = false                               {product}
     bool PrintVMOptions                            = false                               {product}
     bool PrintVMQWaitTime                          = false                               {product}
     bool PrintWarnings                             = true                                {product}
    uintx ProcessDistributionStride                 = 4                                   {product}
     bool ProfileDynamicTypes                       = true                                {C2 diagnostic}
     bool ProfileInterpreter                        = true                                {pd product}
     bool ProfileIntervals                          = false                               {product}
     intx ProfileIntervalsTicks                     = 100                                 {product}
     intx ProfileMaturityPercentage                 = 20                                  {product}
     bool ProfileVM                                 = false                               {product}
     bool ProfilerPrintByteCodeStatistics           = false                               {product}
     bool ProfilerRecordPC                          = false                               {product}
    uintx PromotedPadding                           = 3                                   {product}
    uintx QueuedAllocationWarningCount              = 0                                   {product}
    uintx RTMRetryCount                             = 5                                   {ARCH product}
     bool RangeCheckElimination                     = true                                {product}
     bool RangeLimitCheck                           = true                                {C2 diagnostic}
     intx ReadPrefetchInstr                         = 0                                   {ARCH product}
     bool ReassociateInvariants                     = true                                {C2 product}
     bool ReduceBulkZeroing                         = true                                {C2 product}
     bool ReduceFieldZeroing                        = true                                {C2 product}
     bool ReduceInitialCardMarks                    = true                                {C2 product}
     bool ReduceSignalUsage                         = false                               {product}
     intx RefDiscoveryPolicy                        = 0                                   {product}
     bool ReflectionWrapResolutionErrors            = true                                {product}
     bool RegisterFinalizersAtInit                  = true                                {product}
     bool RelaxAccessControlCheck                   = false                               {product}
    ccstr ReplayDataFile                            =                                     {product}
     bool RequireSharedSpaces                       = false                               {product}
    uintx ReservedCodeCacheSize                     = 251658240                           {pd product}
     bool ResizeOldPLAB                             = true                                {product}
     bool ResizePLAB                                = true                                {product}
     bool ResizeTLAB                                = true                                {pd product}
     bool RestoreMXCSROnJNICalls                    = false                               {product}
     bool RestrictContended                         = true                                {product}
     bool RewriteBytecodes                          = true                                {pd product}
     bool RewriteFrequentPairs                      = true                                {pd product}
     intx SafepointPollOffset                       = 256                                 {C1 pd product}
     intx SafepointSpinBeforeYield                  = 2000                                {product}
     bool SafepointTimeout                          = false                               {product}
     intx SafepointTimeoutDelay                     = 10000                               {product}
     bool ScavengeBeforeFullGC                      = true                                {product}
     intx ScavengeRootsInCode                       = 2                                   {diagnostic}
     intx SelfDestructTimer                         = 0                                   {product}
     bool SerializeVMOutput                         = true                                {diagnostic}
    ccstr SharedArchiveFile                         =                                     {diagnostic}
    uintx SharedBaseAddress                         = 34359738368                         {product}
    ccstr SharedClassListFile                       =                                     {product}
    uintx SharedMiscCodeSize                        = 122880                              {product}
    uintx SharedMiscDataSize                        = 4194304                             {product}
    uintx SharedReadOnlySize                        = 16777216                            {product}
    uintx SharedReadWriteSize                       = 16777216                            {product}
     bool ShowHiddenFrames                          = false                               {diagnostic}
     bool ShowMessageBoxOnError                     = false                               {product}
     intx SoftRefLRUPolicyMSPerMB                   = 1000                                {product}
     bool SpecialEncodeISOArray                     = true                                {C2 product}
     bool SplitIfBlocks                             = true                                {C2 product}
     intx StackRedPages                             = 1                                   {pd product}
     intx StackShadowPages                          = 20                                  {pd product}
     bool StackTraceInThrowable                     = true                                {product}
     intx StackYellowPages                          = 2                                   {pd product}
     bool StartAttachListener                       = false                               {product}
     intx StarvationMonitorInterval                 = 200                                 {product}
     bool StressLdcRewrite                          = false                               {product}
    uintx StringDeduplicationAgeThreshold           = 3                                   {product}
     bool StringDeduplicationRehashALot             = false                               {diagnostic}
     bool StringDeduplicationResizeALot             = false                               {diagnostic}
    uintx StringTableSize                           = 60013                               {product}
     bool SuppressFatalErrorMessage                 = false                               {product}
    uintx SurvivorPadding                           = 3                                   {product}
    uintx SurvivorRatio                             = 8                                   {product}
     intx SuspendRetryCount                         = 50                                  {product}
     intx SuspendRetryDelay                         = 5                                   {product}
     intx SyncFlags                                 = 0                                   {product}
    ccstr SyncKnobs                                 =                                     {product}
     intx SyncVerbose                               = 0                                   {product}
    uintx TLABAllocationWeight                      = 35                                  {product}
    uintx TLABRefillWasteFraction                   = 64                                  {product}
    uintx TLABSize                                  = 0                                   {product}
     bool TLABStats                                 = true                                {product}
    uintx TLABWasteIncrement                        = 4                                   {product}
    uintx TLABWasteTargetPercent                    = 1                                   {product}
    uintx TargetPLABWastePct                        = 10                                  {product}
    uintx TargetSurvivorRatio                       = 50                                  {product}
    uintx TenuredGenerationSizeIncrement            = 20                                  {product}
    uintx TenuredGenerationSizeSupplement           = 80                                  {product}
    uintx TenuredGenerationSizeSupplementDecay      = 2                                   {product}
     intx ThreadPriorityPolicy                      = 0                                   {product}
     bool ThreadPriorityVerbose                     = false                               {product}
    uintx ThreadSafetyMargin                        = 52428800                            {product}
     intx ThreadStackSize                           = 1024                                {pd product}
    uintx ThresholdTolerance                        = 10                                  {product}
     intx Tier0BackedgeNotifyFreqLog                = 10                                  {product}
     intx Tier0InvokeNotifyFreqLog                  = 7                                   {product}
     intx Tier0ProfilingStartPercentage             = 200                                 {product}
     intx Tier23InlineeNotifyFreqLog                = 20                                  {product}
     intx Tier2BackEdgeThreshold                    = 0                                   {product}
     intx Tier2BackedgeNotifyFreqLog                = 14                                  {product}
     intx Tier2CompileThreshold                     = 0                                   {product}
     intx Tier2InvokeNotifyFreqLog                  = 11                                  {product}
     intx Tier3BackEdgeThreshold                    = 60000                               {product}
     intx Tier3BackedgeNotifyFreqLog                = 13                                  {product}
     intx Tier3CompileThreshold                     = 2000                                {product}
     intx Tier3DelayOff                             = 2                                   {product}
     intx Tier3DelayOn                              = 5                                   {product}
     intx Tier3InvocationThreshold                  = 200                                 {product}
     intx Tier3InvokeNotifyFreqLog                  = 10                                  {product}
     intx Tier3LoadFeedback                         = 5                                   {product}
     intx Tier3MinInvocationThreshold               = 100                                 {product}
     intx Tier4BackEdgeThreshold                    = 40000                               {product}
     intx Tier4CompileThreshold                     = 15000                               {product}
     intx Tier4InvocationThreshold                  = 5000                                {product}
     intx Tier4LoadFeedback                         = 3                                   {product}
     intx Tier4MinInvocationThreshold               = 600                                 {product}
     bool TieredCompilation                         = true                                {pd product}
     intx TieredCompileTaskTimeout                  = 50                                  {product}
     intx TieredRateUpdateMaxTime                   = 25                                  {product}
     intx TieredRateUpdateMinTime                   = 1                                   {product}
     intx TieredStopAtLevel                         = 4                                   {product}
     bool TimeLinearScan                            = false                               {C1 product}
     bool TraceBiasedLocking                        = false                               {product}
     bool TraceClassLoading                         = false                               {product rw}
     bool TraceClassLoadingPreorder                 = false                               {product}
     bool TraceClassPaths                           = false                               {product}
     bool TraceClassResolution                      = false                               {product}
     bool TraceClassUnloading                       = false                               {product rw}
     bool TraceDynamicGCThreads                     = false                               {product}
     bool TraceGCTaskThread                         = false                               {diagnostic}
     bool TraceGen0Time                             = false                               {product}
     bool TraceGen1Time                             = false                               {product}
    ccstr TraceJVMTI                                =                                     {product}
     bool TraceJVMTIObjectTagging                   = false                               {diagnostic}
     bool TraceLoaderConstraints                    = false                               {product rw}
     bool TraceMetadataHumongousAllocation          = false                               {product}
     bool TraceMonitorInflation                     = false                               {product}
     bool TraceNMethodInstalls                      = false                               {diagnostic}
     bool TraceParallelOldGCTasks                   = false                               {product}
     intx TraceRedefineClasses                      = 0                                   {product}
     bool TraceSafepointCleanupTime                 = false                               {product}
     bool TraceSharedLookupCache                    = false                               {product}
     bool TraceSuspendWaitFailures                  = false                               {product}
     bool TraceTypeProfile                          = false                               {C2 diagnostic}
     intx TrackedInitializationLimit                = 50                                  {C2 product}
     bool TransmitErrorReport                       = false                               {product}
     bool TrapBasedNullChecks                       = false                               {pd product}
     bool TrapBasedRangeChecks                      = false                               {C2 pd product}
     intx TypeProfileArgsLimit                      = 2                                   {product}
    uintx TypeProfileLevel                          = 111                                 {pd product}
     intx TypeProfileMajorReceiverPercent           = 90                                  {C2 product}
     intx TypeProfileParmsLimit                     = 2                                   {product}
     intx TypeProfileWidth                          = 2                                   {product}
     intx UnguardOnExecutionViolation               = 0                                   {product}
     bool UnlinkSymbolsALot                         = false                               {product}
     bool UnlockDiagnosticVMOptions                := true                                {diagnostic}
     bool UnrollLimitCheck                          = true                                {C2 diagnostic}
     bool UnsyncloadClass                           = false                               {diagnostic}
     bool Use486InstrsOnly                          = false                               {ARCH product}
     bool UseAES                                    = true                                {product}
     bool UseAESIntrinsics                          = true                                {product}
     intx UseAVX                                    = 2                                   {ARCH product}
     bool UseAdaptiveGCBoundary                     = false                               {product}
     bool UseAdaptiveGenerationSizePolicyAtMajorCollection  = true                                {product}
     bool UseAdaptiveGenerationSizePolicyAtMinorCollection  = true                                {product}
     bool UseAdaptiveNUMAChunkSizing                = true                                {product}
     bool UseAdaptiveSizeDecayMajorGCCost           = true                                {product}
     bool UseAdaptiveSizePolicy                     = true                                {product}
     bool UseAdaptiveSizePolicyFootprintGoal        = true                                {product}
     bool UseAdaptiveSizePolicyWithSystemGC         = false                               {product}
     bool UseAddressNop                             = true                                {ARCH product}
     bool UseAltSigs                                = false                               {product}
     bool UseAutoGCSelectPolicy                     = false                               {product}
     bool UseBMI1Instructions                       = true                                {ARCH product}
     bool UseBMI2Instructions                       = true                                {ARCH product}
     bool UseBiasedLocking                          = true                                {product}
     bool UseBimorphicInlining                      = true                                {C2 product}
     bool UseBoundThreads                           = true                                {product}
     bool UseBsdPosixThreadCPUClocks                = true                                {product}
     bool UseCLMUL                                  = true                                {ARCH product}
     bool UseCMSBestFit                             = true                                {product}
     bool UseCMSCollectionPassing                   = true                                {product}
     bool UseCMSCompactAtFullCollection             = true                                {product}
     bool UseCMSInitiatingOccupancyOnly             = false                               {product}
     bool UseCRC32Intrinsics                        = true                                {product}
     bool UseCodeCacheFlushing                      = true                                {product}
     bool UseCompiler                               = true                                {product}
     bool UseCompilerSafepoints                     = true                                {product}
     bool UseCompressedClassPointers               := true                                {lp64_product}
     bool UseCompressedOops                        := true                                {lp64_product}
     bool UseConcMarkSweepGC                        = false                               {product}
     bool UseCondCardMark                           = false                               {C2 product}
     bool UseCountLeadingZerosInstruction           = true                                {ARCH product}
     bool UseCountTrailingZerosInstruction          = true                                {ARCH product}
     bool UseCounterDecay                           = true                                {product}
     bool UseDivMod                                 = true                                {C2 product}
     bool UseDynamicNumberOfGCThreads               = false                               {product}
     bool UseFPUForSpilling                         = true                                {C2 product}
     bool UseFastAccessorMethods                    = false                               {product}
     bool UseFastEmptyMethods                       = false                               {product}
     bool UseFastJNIAccessors                       = true                                {product}
     bool UseFastStosb                              = true                                {ARCH product}
     bool UseG1GC                                   = false                               {product}
     bool UseGCLogFileRotation                      = false                               {product}
     bool UseGCOverheadLimit                        = true                                {product}
     bool UseGCTaskAffinity                         = false                               {product}
     bool UseHeavyMonitors                          = false                               {product}
     bool UseHugeTLBFS                              = false                               {product}
     bool UseImplicitStableValues                   = true                                {C2 diagnostic}
     bool UseIncDec                                 = true                                {ARCH diagnostic}
     bool UseInlineCaches                           = true                                {product}
     bool UseInlineDepthForSpeculativeTypes         = true                                {C2 diagnostic}
     bool UseInterpreter                            = true                                {product}
     bool UseJumpTables                             = true                                {C2 product}
     bool UseLWPSynchronization                     = true                                {product}
     bool UseLargePages                             = false                               {pd product}
     bool UseLargePagesInMetaspace                  = false                               {product}
     bool UseLargePagesIndividualAllocation         = false                               {pd product}
     bool UseLockedTracing                          = false                               {product}
     bool UseLoopCounter                            = true                                {product}
     bool UseLoopInvariantCodeMotion                = true                                {C1 product}
     bool UseLoopPredicate                          = true                                {C2 product}
     bool UseMathExactIntrinsics                    = true                                {C2 product}
     bool UseMaximumCompactionOnSystemGC            = true                                {product}
     bool UseMembar                                 = true                                {pd product}
     bool UseMultiplyToLenIntrinsic                 = true                                {C2 product}
     bool UseNUMA                                   = false                               {product}
     bool UseNUMAInterleaving                       = false                               {product}
     bool UseNewCode                                = false                               {diagnostic}
     bool UseNewCode2                               = false                               {diagnostic}
     bool UseNewCode3                               = false                               {diagnostic}
     bool UseNewLongLShift                          = false                               {ARCH product}
     bool UseOSErrorReporting                       = false                               {pd product}
     bool UseOldInlining                            = true                                {C2 product}
     bool UseOnStackReplacement                     = true                                {pd product}
     bool UseOnlyInlinedBimorphic                   = true                                {C2 product}
     bool UseOprofile                               = false                               {product}
     bool UseOptoBiasInlining                       = true                                {C2 product}
     bool UsePSAdaptiveSurvivorSizePolicy           = true                                {product}
     bool UseParNewGC                               = false                               {product}
     bool UseParallelGC                            := true                                {product}
     bool UseParallelOldGC                          = true                                {product}
     bool UsePerfData                               = true                                {product}
     bool UsePopCountInstruction                    = true                                {product}
     bool UseRDPCForConstantTableBase               = false                               {C2 product}
     bool UseRTMDeopt                               = false                               {ARCH product}
     bool UseRTMLocking                             = false                               {ARCH product}
     bool UseSHA                                    = false                               {product}
     bool UseSHA1Intrinsics                         = false                               {product}
     bool UseSHA256Intrinsics                       = false                               {product}
     bool UseSHA512Intrinsics                       = false                               {product}
     bool UseSHM                                    = false                               {product}
     intx UseSSE                                    = 4                                   {product}
     bool UseSSE42Intrinsics                        = true                                {product}
     bool UseSerialGC                               = false                               {product}
     bool UseSharedSpaces                           = false                               {product}
     bool UseSignalChaining                         = true                                {product}
     bool UseStoreImmI16                            = false                               {ARCH product}
     bool UseStringDeduplication                    = false                               {product}
     bool UseSuperWord                              = true                                {C2 product}
     bool UseTLAB                                   = true                                {pd product}
     bool UseThreadPriorities                       = true                                {pd product}
     bool UseTypeProfile                            = true                                {product}
     bool UseTypeSpeculation                        = true                                {C2 product}
     bool UseUnalignedLoadStores                    = true                                {ARCH product}
     bool UseVMInterruptibleIO                      = false                               {product}
     bool UseXMMForArrayCopy                        = true                                {product}
     bool UseXmmI2D                                 = false                               {ARCH product}
     bool UseXmmI2F                                 = false                               {ARCH product}
     bool UseXmmLoadAndClearUpper                   = true                                {ARCH product}
     bool UseXmmRegToRegMoveAll                     = true                                {ARCH product}
     bool VMThreadHintNoPreempt                     = false                               {product}
     intx VMThreadPriority                          = -1                                  {product}
     intx VMThreadStackSize                         = 1024                                {pd product}
     intx ValueMapInitialSize                       = 11                                  {C1 product}
     intx ValueMapMaxLoopSize                       = 8                                   {C1 product}
     intx ValueSearchLimit                          = 1000                                {C2 product}
     bool VerboseVerification                       = false                               {diagnostic}
     bool VerifyAdapterCalls                        = false                               {diagnostic}
     bool VerifyAfterGC                             = false                               {diagnostic}
     bool VerifyBeforeExit                          = false                               {diagnostic}
     bool VerifyBeforeGC                            = false                               {diagnostic}
     bool VerifyBeforeIteration                     = false                               {diagnostic}
     bool VerifyDuringGC                            = false                               {diagnostic}
     bool VerifyDuringStartup                       = false                               {diagnostic}
     intx VerifyGCLevel                             = 0                                   {diagnostic}
    uintx VerifyGCStartAt                           = 0                                   {diagnostic}
     bool VerifyMergedCPBytecodes                   = true                                {product}
     bool VerifyMethodHandles                       = false                               {diagnostic}
     bool VerifyObjectStartArray                    = true                                {diagnostic}
     bool VerifyRememberedSets                      = false                               {diagnostic}
     bool VerifySharedSpaces                        = false                               {product}
     bool VerifySilently                            = false                               {diagnostic}
     bool VerifyStringTableAtExit                   = false                               {diagnostic}
     bool WhiteBoxAPI                               = false                               {diagnostic}
     intx WorkAroundNPTLTimedWaitHang               = 1                                   {product}
    uintx YoungGenerationSizeIncrement              = 20                                  {product}
    uintx YoungGenerationSizeSupplement             = 80                                  {product}
    uintx YoungGenerationSizeSupplementDecay        = 8                                   {product}
    uintx YoungPLABSize                             = 4096                                {product}
     bool ZeroTLAB                                  = false                               {product}
     intx hashCode                                  = 5                                   {product}
<writer thread='17155'/>
<thread_logfile thread='17155' filename='/var/folders/y_/l8zk97v90yjg1zfljq3xp4tr0000gn/T//hs_c17155_pid79392.log'/>
<writer thread='16643'/>
Could not load hsdis-amd64.dylib; library not loadable; PrintAssembly is disabled
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x000000010e66ed00' size='864' address='0x000000010e66eb90' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='4737' iicount='4737' stamp='0.514'/>
    514    1     n 0       java.lang.System::arraycopy (native)   (static)
<writer thread='17667'/>
<thread_logfile thread='17667' filename='/var/folders/y_/l8zk97v90yjg1zfljq3xp4tr0000gn/T//hs_c17667_pid79392.log'/>
<writer thread='18179'/>
<thread_logfile thread='18179' filename='/var/folders/y_/l8zk97v90yjg1zfljq3xp4tr0000gn/T//hs_c18179_pid79392.log'/>
<writer thread='3331'/>
<task_queued compile_id='2' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='512' iicount='512' level='3' stamp='0.548' comment='tiered' hot_count='512'/>
<writer thread='18179'/>
    548    2       3       java.lang.System::getSecurityManager (4 bytes)
<writer thread='3331'/>
<task_queued compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='1476' backedge_count='30547' iicount='1476' stamp='0.549' comment='tiered' hot_count='1476'/>
<writer thread='17155'/>
    549    3       4       java.lang.String::hashCode (55 bytes)
<writer thread='18179'/>
<nmethod compile_id='2' compiler='C1' level='3' entry='0x000000010e7043e0' size='768' address='0x000000010e704290' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='515' iicount='515' stamp='0.549'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='3331'/>
<task_queued compile_id='4' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2265' backedge_count='5120' iicount='2265' level='3' stamp='0.550' comment='tiered' hot_count='2265'/>
<writer thread='18179'/>
    549    4       3       java.lang.String::equals (81 bytes)
<nmethod compile_id='4' compiler='C1' level='3' entry='0x000000010e70c8e0' size='2504' address='0x000000010e70c750' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2265' backedge_count='5120' iicount='2265' stamp='0.551'/>
<writer thread='17155'/>
<nmethod compile_id='3' compiler='C2' level='4' entry='0x000000010e710020' size='1256' address='0x000000010e70fed0' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/lang/String hashCode ()I' bytes='55' count='1486' backedge_count='30841' iicount='1486' stamp='0.553'/>
<writer thread='3331'/>
<task_queued compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='18048' iicount='18048' stamp='0.555' comment='tiered' hot_count='18048'/>
<writer thread='17667'/>
    555    5       4       java.lang.String::charAt (29 bytes)
<writer thread='3331'/>
<task_queued compile_id='6' method='java/lang/Math min (II)I' bytes='11' count='3584' iicount='3584' level='3' stamp='0.556' comment='tiered' hot_count='3584'/>
<writer thread='18179'/>
    556    6       3       java.lang.Math::min (11 bytes)
<nmethod compile_id='6' compiler='C1' level='3' entry='0x000000010e710540' size='936' address='0x000000010e7103d0' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='3584' iicount='3584' stamp='0.557'/>
<writer thread='17667'/>
<nmethod compile_id='5' compiler='C2' level='4' entry='0x000000010e7108e0' size='928' address='0x000000010e710790' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='18074' iicount='18074' stamp='0.557'/>
<writer thread='3331'/>
<task_queued compile_id='7' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='384' iicount='384' level='3' stamp='0.558' comment='tiered' hot_count='384'/>
<writer thread='18179'/>
    557    7       3       java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<nmethod compile_id='7' compiler='C1' level='3' entry='0x000000010e70f780' size='1184' address='0x000000010e70f610' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='384' iicount='384' stamp='0.558'/>
<writer thread='3331'/>
<task_queued compile_id='8' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' level='3' stamp='0.559' comment='tiered' hot_count='896'/>
<writer thread='18179'/>
    558    8       3       java.lang.String::indexOf (7 bytes)
                              @ 3   java.lang.String::indexOf (70 bytes)   callee is too large
<nmethod compile_id='8' compiler='C1' level='3' entry='0x000000010e70f340' size='1040' address='0x000000010e70f1d0' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' stamp='0.559'/>
<writer thread='3331'/>
<task_queued compile_id='9' method='java/lang/String indexOf (II)I' bytes='70' count='918' backedge_count='35840' iicount='918' stamp='0.595' comment='tiered' hot_count='918'/>
<writer thread='17155'/>
    594    9       4       java.lang.String::indexOf (70 bytes)
<nmethod compile_id='9' compiler='C2' level='4' entry='0x000000010e70d7e0' size='1544' address='0x000000010e70d690' relocation_offset='296' insts_offset='336' stub_offset='720' scopes_data_offset='752' scopes_pcs_offset='912' dependencies_offset='1520' nul_chk_table_offset='1528' method='java/lang/String indexOf (II)I' bytes='70' count='919' backedge_count='35896' iicount='919' stamp='0.600'/>
<writer thread='3331'/>
<task_queued compile_id='10' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='1536' iicount='1536' level='3' stamp='0.601' comment='tiered' hot_count='1536'/>
<writer thread='18179'/>
    601   10       3       java.lang.String::&lt;init&gt; (62 bytes)
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 13  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 26  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 45  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 55   java.util.Arrays::copyOfRange (63 bytes)   callee is too large
<writer thread='3331'/>
<task_queued compile_id='11' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='456' backedge_count='25600' iicount='456' level='3' stamp='0.604' comment='tiered' hot_count='456'/>
<writer thread='18179'/>
<nmethod compile_id='10' compiler='C1' level='3' entry='0x000000010e70ea80' size='2288' address='0x000000010e70e8d0' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1528' scopes_pcs_offset='1768' dependencies_offset='2264' nul_chk_table_offset='2272' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='1539' iicount='1539' stamp='0.605'/>
    605   11       3       sun.nio.cs.UTF_8$Encoder::encode (359 bytes)
                              @ 14   java.lang.Math::min (11 bytes)
                              @ 139   java.lang.Character::isSurrogate (18 bytes)
                              @ 157  sun/nio/cs/Surrogate$Parser::&lt;init&gt; (not loaded)   not inlineable
                              @ 175  sun/nio/cs/Surrogate$Parser::parse (not loaded)   not inlineable
                              @ 186   java.nio.charset.CharsetEncoder::malformedInputAction (5 bytes)
<writer thread='3331'/>
<task_queued compile_id='12' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.607' comment='tiered' hot_count='512'/>
<task_queued compile_id='13' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1024' backedge_count='2618' iicount='1024' level='3' stamp='0.607' comment='tiered' hot_count='1024'/>
<writer thread='18179'/>
<nmethod compile_id='11' compiler='C1' level='3' entry='0x000000010e711040' size='5552' address='0x000000010e710e50' relocation_offset='296' insts_offset='496' stub_offset='3184' scopes_data_offset='3400' scopes_pcs_offset='4176' dependencies_offset='5488' nul_chk_table_offset='5496' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='466' backedge_count='25983' iicount='466' stamp='0.607'/>
    607   13       3       java.lang.String::startsWith (72 bytes)
<nmethod compile_id='13' compiler='C1' level='3' entry='0x000000010e70e300' size='1824' address='0x000000010e70e190' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1036' backedge_count='2627' iicount='1036' stamp='0.608'/>
<writer thread='3331'/>
<task_queued compile_id='14' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.608' comment='tiered' hot_count='256'/>
<writer thread='18179'/>
    608   12       3       java.lang.String::startsWith (7 bytes)
<writer thread='3331'/>
<task_queued compile_id='15' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='123' backedge_count='8192' iicount='123' level='3' stamp='0.608' comment='tiered' hot_count='123'/>
<writer thread='18179'/>
                              @ 3   java.lang.String::startsWith (72 bytes)   callee is too large
<nmethod compile_id='12' compiler='C1' level='3' entry='0x000000010e70de40' size='1040' address='0x000000010e70dcd0' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='546' iicount='546' stamp='0.608'/>
    608   15       3       java.lang.String::indexOf (166 bytes)
<nmethod compile_id='15' compiler='C1' level='3' entry='0x000000010e7125c0' size='3232' address='0x000000010e712410' relocation_offset='296' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='124' backedge_count='8311' iicount='124' stamp='0.610'/>
    609   14       1       java.net.URL::getAuthority (5 bytes)
<nmethod compile_id='14' compiler='C1' level='1' entry='0x000000010e710ca0' size='704' address='0x000000010e710b50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='257' iicount='257' stamp='0.610'/>
<writer thread='3331'/>
<task_queued compile_id='16' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='242' backedge_count='14336' iicount='242' level='3' stamp='0.612' comment='tiered' hot_count='242'/>
<writer thread='18179'/>
    611   16       3       java.io.UnixFileSystem::normalize (75 bytes)
                              @ 1   java.lang.String::length (6 bytes)
                              @ 19   java.lang.String::charAt (29 bytes)
                                @ 18  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 44   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
                              @ 69   java.io.UnixFileSystem::normalize (132 bytes)   callee is too large
<nmethod compile_id='16' compiler='C1' level='3' entry='0x000000010e7132a0' size='3136' address='0x000000010e7130d0' relocation_offset='296' insts_offset='464' stub_offset='1872' scopes_data_offset='2104' scopes_pcs_offset='2488' dependencies_offset='3096' nul_chk_table_offset='3104' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='243' backedge_count='14408' iicount='243' stamp='0.614'/>
<writer thread='3331'/>
<task_queued compile_id='17' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='768' iicount='768' level='3' stamp='0.617' comment='tiered' hot_count='768'/>
<writer thread='18179'/>
    617   17       3       java.lang.StringBuilder::append (8 bytes)
<writer thread='3331'/>
<task_queued compile_id='18' method='java/lang/String length ()I' bytes='6' count='2688' iicount='2688' level='3' stamp='0.617' comment='tiered' hot_count='2688'/>
<writer thread='18179'/>
                              @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
<writer thread='3331'/>
<task_queued compile_id='19' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1024' iicount='1024' level='3' stamp='0.618' comment='tiered' hot_count='1024'/>
<task_queued compile_id='20' method='java/lang/String getChars (II[CI)V' bytes='62' count='1024' iicount='1024' level='3' stamp='0.618' comment='tiered' hot_count='1024'/>
<task_queued compile_id='21' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='1408' iicount='1408' level='3' stamp='0.618' comment='tiered' hot_count='1408'/>
<writer thread='18179'/>
<nmethod compile_id='17' compiler='C1' level='3' entry='0x000000010e70d440' size='912' address='0x000000010e70d2d0' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='852' iicount='852' stamp='0.618'/>
<writer thread='3331'/>
<task_queued compile_id='22' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1664' iicount='1664' level='3' stamp='0.618' comment='tiered' hot_count='1664'/>
<writer thread='18179'/>
    617   18       3       java.lang.String::length (6 bytes)
<writer thread='3331'/>
<task_queued compile_id='23' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='384' iicount='384' level='3' stamp='0.618' comment='tiered' hot_count='384'/>
<writer thread='18179'/>
<nmethod compile_id='18' compiler='C1' level='3' entry='0x000000010e713ec0' size='920' address='0x000000010e713d50' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='2907' iicount='2907' stamp='0.618'/>
<writer thread='3331'/>
<task_queued compile_id='24' method='com/ibeetl/code/jit/HelloWorld getMessage ()Ljava/lang/String;' bytes='3' count='128' iicount='128' level='1' stamp='0.619' comment='tiered' hot_count='128'/>
<writer thread='18179'/>
    618   21       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
<writer thread='3331'/>
<task_queued compile_id='25' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='512' iicount='512' level='3' stamp='0.619' comment='tiered' hot_count='512'/>
<writer thread='18179'/>
                              @ 12   java.lang.AbstractStringBuilder::expandCapacity (50 bytes)   callee is too large
<nmethod compile_id='21' compiler='C1' level='3' entry='0x000000010e714280' size='1192' address='0x000000010e714110' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='968' scopes_pcs_offset='1024' dependencies_offset='1168' nul_chk_table_offset='1176' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='2061' iicount='2061' stamp='0.619'/>
    619   19       3       java.lang.AbstractStringBuilder::append (50 bytes)
                              @ 5   java.lang.AbstractStringBuilder::appendNull (56 bytes)   callee is too large
                              @ 10   java.lang.String::length (6 bytes)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)
                                @ 12   java.lang.AbstractStringBuilder::expandCapacity (50 bytes)   callee is too large
                              @ 35   java.lang.String::getChars (62 bytes)   callee is too large
<nmethod compile_id='19' compiler='C1' level='3' entry='0x000000010e714780' size='2472' address='0x000000010e7145d0' relocation_offset='296' insts_offset='432' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2000' dependencies_offset='2432' nul_chk_table_offset='2440' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1866' iicount='1868' stamp='0.621'/>
<writer thread='3331'/>
<task_queued compile_id='26' method='java/lang/String length ()I' bytes='6' count='3584' iicount='3584' level='1' stamp='0.621' comment='tiered' hot_count='3584'/>
<writer thread='18179'/>
    621   26       1       java.lang.String::length (6 bytes)
<nmethod compile_id='26' compiler='C1' level='1' entry='0x000000010e7150e0' size='768' address='0x000000010e714f90' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='648' dependencies_offset='744' nul_chk_table_offset='752' method='java/lang/String length ()I' bytes='6' count='3586' iicount='3586' stamp='0.622'/>
<make_not_entrant thread='18179' compile_id='18' compiler='C1' level='3' stamp='0.622'/>
    621   18       3       java.lang.String::length (6 bytes)   made not entrant
    621   20       3       java.lang.String::getChars (62 bytes)
                              @ 9  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 27  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 43  java/lang/StringIndexOutOfBoundsException::&lt;init&gt; (not loaded)   not inlineable
                              @ 58   java.lang.System::arraycopy (0 bytes)   intrinsic
<nmethod compile_id='20' compiler='C1' level='3' entry='0x000000010e715480' size='2256' address='0x000000010e7152d0' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='1872' iicount='1872' stamp='0.622'/>
    622   22       3       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='3331'/>
<task_queued compile_id='27' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='512' iicount='512' level='3' stamp='0.623' comment='tiered' hot_count='512'/>
<writer thread='18179'/>
                              @ 16   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 20   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 25   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 29   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (62 bytes)   callee is too large
                              @ 32   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (62 bytes)   callee is too large
                              @ 35   java.lang.IllegalArgumentException::&lt;init&gt; (6 bytes)   don&apos;t inline Throwable constructors
                              @ 54   java.lang.Math::min (11 bytes)
                              @ 57   java.lang.System::arraycopy (0 bytes)   intrinsic
<nmethod compile_id='22' compiler='C1' level='3' entry='0x000000010e715de0' size='4856' address='0x000000010e715bd0' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2286' iicount='2286' stamp='0.625'/>
    624   23       3       java.lang.StringBuilder::toString (17 bytes)
                              @ 13   java.lang.String::&lt;init&gt; (62 bytes)   callee is too large
<nmethod compile_id='23' compiler='C1' level='3' entry='0x000000010e717080' size='1104' address='0x000000010e716f10' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='952' dependencies_offset='1096' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1019' iicount='1020' stamp='0.625'/>
    625   25       3       java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                              @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
<nmethod compile_id='25' compiler='C1' level='3' entry='0x000000010e717500' size='1312' address='0x000000010e717390' relocation_offset='296' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='2200' iicount='2201' stamp='0.626'/>
    626   24  s    1       com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)
<writer thread='3331'/>
<task_queued compile_id='28' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='5632' iicount='5632' stamp='0.627' comment='tiered' hot_count='5632'/>
<writer thread='18179'/>
<nmethod compile_id='24' compiler='C1' level='1' entry='0x000000010e717a40' size='1128' address='0x000000010e7178d0' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1008' scopes_pcs_offset='1040' dependencies_offset='1120' oops_offset='992' method='com/ibeetl/code/jit/HelloWorld getMessage ()Ljava/lang/String;' bytes='3' count='2530' iicount='2531' stamp='0.627'/>
    626   27       3       com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)
<writer thread='17155'/>
    627   28       4       java.lang.AbstractStringBuilder::append (50 bytes)
<writer thread='18179'/>
              s               @ 1   com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)
                              @ 9   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                  @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 14   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 18   java.lang.StringBuilder::append (8 bytes)
                                @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                              @ 21   java.lang.StringBuilder::toString (17 bytes)
                                @ 13   java.lang.String::&lt;init&gt; (62 bytes)   callee is too large
<nmethod compile_id='27' compiler='C1' level='3' entry='0x000000010e717f20' size='3536' address='0x000000010e717d50' relocation_offset='296' insts_offset='464' stub_offset='2448' scopes_data_offset='2736' scopes_pcs_offset='3080' dependencies_offset='3528' oops_offset='2648' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='2768' iicount='2768' stamp='0.629'/>
<writer thread='3331'/>
<task_queued compile_id='29' method='java/lang/String getChars (II[CI)V' bytes='62' count='6656' iicount='6656' stamp='0.629' comment='tiered' hot_count='6656'/>
<writer thread='17667'/>
    628   29       4       java.lang.String::getChars (62 bytes)
                              @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='3331'/>
<task_queued compile_id='30' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5632' iicount='5632' stamp='0.631' comment='tiered' hot_count='5632'/>
<task_queued compile_id='31' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='6656' iicount='6656' stamp='0.632' comment='tiered' hot_count='6656'/>
<writer thread='17155'/>
                              @ 10   java.lang.String::length (6 bytes)   inline (hot)
                              @ 21   java.lang.AbstractStringBuilder::ensureCapacityInternal (16 bytes)   inline (hot)
                                @ 12   java.lang.AbstractStringBuilder::expandCapacity (50 bytes)   inline (hot)
                                  @ 43   java.util.Arrays::copyOf (19 bytes)   inline (hot)
                                    @ 11   java.lang.Math::min (11 bytes)   (intrinsic)
                                    @ 14   java.lang.System::arraycopy (0 bytes)   (intrinsic)
                              @ 35   java.lang.String::getChars (62 bytes)   inline (hot)
                                @ 58   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='17667'/>
<nmethod compile_id='29' compiler='C2' level='4' entry='0x000000010e71ba20' size='1280' address='0x000000010e71b8d0' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='888' dependencies_offset='1224' handler_table_offset='1232' nul_chk_table_offset='1256' method='java/lang/String getChars (II[CI)V' bytes='62' count='11150' iicount='11150' stamp='0.633'/>
<make_not_entrant thread='17667' compile_id='20' compiler='C1' level='3' stamp='0.633'/>
    633   20       3       java.lang.String::getChars (62 bytes)   made not entrant
    633   30       4       java.util.Arrays::copyOfRange (63 bytes)
<writer thread='3331'/>
<task_queued compile_id='32' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='6656' iicount='6656' stamp='0.634' comment='tiered' hot_count='6656'/>
<writer thread='17667'/>
                              @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                              @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<nmethod compile_id='30' compiler='C2' level='4' entry='0x000000010e719f60' size='1432' address='0x000000010e719e10' relocation_offset='296' insts_offset='336' stub_offset='880' scopes_data_offset='920' scopes_pcs_offset='1056' dependencies_offset='1360' handler_table_offset='1368' nul_chk_table_offset='1416' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='8367' iicount='8367' stamp='0.637'/>
<make_not_entrant thread='17667' compile_id='22' compiler='C1' level='3' stamp='0.637'/>
    636   22       3       java.util.Arrays::copyOfRange (63 bytes)   made not entrant
    636   31       4       java.lang.String::&lt;init&gt; (62 bytes)
<writer thread='17155'/>
<nmethod compile_id='28' compiler='C2' level='4' entry='0x000000010e7193c0' size='2968' address='0x000000010e719250' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1472' scopes_pcs_offset='2008' dependencies_offset='2840' handler_table_offset='2848' nul_chk_table_offset='2920' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='14444' iicount='14444' stamp='0.639'/>
<make_not_entrant thread='17155' compile_id='19' compiler='C1' level='3' stamp='0.639'/>
    638   19       3       java.lang.AbstractStringBuilder::append (50 bytes)   made not entrant
<writer thread='17667'/>
                              @ 1   java.lang.Object::&lt;init&gt; (1 bytes)   inline (hot)
                              @ 55   java.util.Arrays::copyOfRange (63 bytes)   inline (hot)
                                @ 54   java.lang.Math::min (11 bytes)   (intrinsic)
                                @ 57   java.lang.System::arraycopy (0 bytes)   (intrinsic)
<writer thread='17155'/>
    638   32       4       com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)
              s               @ 1   com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)   inline (hot)
                              @ 9   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                              @ 14   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 18   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                              @ 21   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
<writer thread='17667'/>
<nmethod compile_id='31' compiler='C2' level='4' entry='0x000000010e718ca0' size='1744' address='0x000000010e718b50' relocation_offset='296' insts_offset='336' stub_offset='976' scopes_data_offset='1024' scopes_pcs_offset='1224' dependencies_offset='1672' handler_table_offset='1680' nul_chk_table_offset='1728' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='8303' iicount='8303' stamp='0.641'/>
<make_not_entrant thread='17667' compile_id='10' compiler='C1' level='3' stamp='0.641'/>
    641   10       3       java.lang.String::&lt;init&gt; (62 bytes)   made not entrant
<writer thread='17155'/>
<nmethod compile_id='32' compiler='C2' level='4' entry='0x000000010e71d460' size='1368' address='0x000000010e71d310' relocation_offset='296' insts_offset='336' stub_offset='1040' scopes_data_offset='1112' scopes_pcs_offset='1192' dependencies_offset='1336' handler_table_offset='1344' oops_offset='1064' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='8349' iicount='8357' stamp='0.642'/>
<make_not_entrant thread='17155' compile_id='27' compiler='C1' level='3' stamp='0.642'/>
    641   27       3       com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)   made not entrant
<writer thread='3331'/>
<task_queued compile_id='33' compile_kind='osr' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='60416' iicount='1' osr_bci='10' level='3' stamp='0.660' comment='tiered' hot_count='60416'/>
<writer thread='18179'/>
    660   33 %     3       com.ibeetl.code.jit.HelloWorld::main @ 10 (27 bytes)
                              @ 4   com.ibeetl.code.jit.HelloWorld::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)
              s                 @ 1   com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)
                                @ 9   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 21   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::&lt;init&gt; (62 bytes)   callee is too large
<nmethod compile_id='33' compile_kind='osr' compiler='C1' level='3' entry='0x000000010e71a8a0' size='4632' address='0x000000010e71a690' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3456' scopes_pcs_offset='3968' dependencies_offset='4608' nul_chk_table_offset='4616' oops_offset='3352' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='68755' iicount='1' stamp='0.662'/>
<writer thread='3331'/>
<task_queued compile_id='34' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='69681' iicount='1' level='3' stamp='0.662' comment='tiered' hot_count='1'/>
<writer thread='18179'/>
    662   34       3       com.ibeetl.code.jit.HelloWorld::main (27 bytes)
                              @ 4   com.ibeetl.code.jit.HelloWorld::&lt;init&gt; (5 bytes)
                                @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                              @ 17   com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)
              s                 @ 1   com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)
                                @ 9   java.lang.StringBuilder::&lt;init&gt; (7 bytes)
                                  @ 3   java.lang.AbstractStringBuilder::&lt;init&gt; (12 bytes)
                                    @ 1   java.lang.Object::&lt;init&gt; (1 bytes)
                                @ 14   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 18   java.lang.StringBuilder::append (8 bytes)
                                  @ 2   java.lang.AbstractStringBuilder::append (50 bytes)   callee is too large
                                @ 21   java.lang.StringBuilder::toString (17 bytes)
                                  @ 13   java.lang.String::&lt;init&gt; (62 bytes)   callee is too large
<nmethod compile_id='34' compiler='C1' level='3' entry='0x000000010e71c380' size='4424' address='0x000000010e71c190' relocation_offset='296' insts_offset='496' stub_offset='3024' scopes_data_offset='3328' scopes_pcs_offset='3824' dependencies_offset='4416' oops_offset='3224' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='72090' iicount='1' stamp='0.664'/>
<writer thread='3331'/>
<task_queued compile_id='35' compile_kind='osr' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='101425' iicount='1' osr_bci='10' stamp='0.671' comment='tiered' hot_count='101425'/>
<writer thread='17667'/>
    671   35 %     4       com.ibeetl.code.jit.HelloWorld::main @ 10 (27 bytes)
                              @ 17   com.ibeetl.code.jit.HelloWorld::sayHello (26 bytes)   inline (hot)
              s                 @ 1   com.ibeetl.code.jit.HelloWorld::getMessage (3 bytes)   inline (hot)
                                @ 9   java.lang.StringBuilder::&lt;init&gt; (7 bytes)   inline (hot)
                                @ 14   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 18   java.lang.StringBuilder::append (8 bytes)   inline (hot)
                                @ 21   java.lang.StringBuilder::toString (17 bytes)   inline (hot)
<nmethod compile_id='35' compile_kind='osr' compiler='C2' level='4' entry='0x000000010e720e20' size='1736' address='0x000000010e720cd0' relocation_offset='296' insts_offset='336' stub_offset='1200' scopes_data_offset='1280' scopes_pcs_offset='1416' dependencies_offset='1704' handler_table_offset='1712' oops_offset='1224' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='122288' iicount='1' stamp='0.676'/>
<make_not_entrant thread='17667' compile_id='33' compile_kind='osr' compiler='C1' level='3' stamp='0.676'/>
    675   33 %     3       com.ibeetl.code.jit.HelloWorld::main @ -2 (27 bytes)   made not entrant
<writer thread='11011'/>
<task_queued compile_id='36' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='768' iicount='768' level='1' stamp='0.784' comment='tiered' hot_count='768'/>
<writer thread='18179'/>
    783   36       1       java.lang.ref.Reference::get (5 bytes)
<nmethod compile_id='36' compiler='C1' level='1' entry='0x000000010e71a520' size='680' address='0x000000010e71a3d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='799' iicount='799' stamp='0.785'/>
<writer thread='3331'/>
<uncommon_trap thread='3331' reason='unstable_if' action='reinterpret' compile_id='35' compile_kind='osr' compiler='C2' level='4' stamp='0.829'>
<jvms bci='13' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='127025' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='3331' compile_id='35' compile_kind='osr' compiler='C2' level='4' stamp='0.829'/>
    829   35 %     4       com.ibeetl.code.jit.HelloWorld::main @ -2 (27 bytes)   made not entrant
CodeCache: size=245760Kb used=1142Kb max_used=1153Kb free=244617Kb
 bounds [0x000000010e600000, 0x000000010e870000, 0x000000011d600000]
 total_blobs=291 nmethods=36 adapters=170
 compilation: enabled
<writer thread='9987'/>
<destroy_vm stamp='0.832'/>
<tty_done stamp='1.180'/>
</tty>
<compilation_log thread='18179'>
<start_compile_thread name='C1 CompilerThread2' thread='18179' process='79392' stamp='0.535'/>
<task compile_id='2' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='514' iicount='514' level='3' stamp='0.549'>
<phase name='buildIR' stamp='0.549'>
<klass id='726' name='java/lang/SecurityManager' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='817' holder='720' name='getSecurityManager' return='726' flags='9' bytes='4' iicount='515'/>
<parse method='817'  stamp='0.549'>
<parse_done stamp='0.549'/>
</parse>
<phase name='optimize_blocks' stamp='0.549'>
<phase_done name='optimize_blocks' stamp='0.549'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.549'>
<phase_done name='rangeCheckElimination' stamp='0.549'/>
</phase>
<phase name='optimize_null_checks' stamp='0.549'>
<phase_done name='optimize_null_checks' stamp='0.549'/>
</phase>
<phase_done name='buildIR' stamp='0.549'/>
</phase>
<phase name='emit_lir' stamp='0.549'>
<phase name='lirGeneration' stamp='0.549'>
<phase_done name='lirGeneration' stamp='0.549'/>
</phase>
<phase name='linearScan' stamp='0.549'>
<phase_done name='linearScan' stamp='0.549'/>
</phase>
<phase_done name='emit_lir' stamp='0.549'/>
</phase>
<phase name='codeemit' stamp='0.549'>
<phase_done name='codeemit' stamp='0.549'/>
</phase>
<phase name='codeinstall' stamp='0.549'>
<phase_done name='codeinstall' stamp='0.549'/>
</phase>
<code_cache total_blobs='252' nmethods='2' adapters='166' free_code_cache='250591808'/>
<task_done success='1' nmsize='336' count='515' stamp='0.549'/>
</task>
<task compile_id='4' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='2265' backedge_count='5120' iicount='2265' level='3' stamp='0.550'>
<phase name='buildIR' stamp='0.550'>
<type id='701' name='boolean'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='equals' return='701' arguments='714' flags='1' bytes='81' iicount='2265'/>
<parse method='817'  stamp='0.550'>
<parse_done stamp='0.550'/>
</parse>
<phase name='optimize_blocks' stamp='0.550'>
<phase_done name='optimize_blocks' stamp='0.550'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.550'>
<phase_done name='rangeCheckElimination' stamp='0.550'/>
</phase>
<phase name='optimize_null_checks' stamp='0.550'>
<phase_done name='optimize_null_checks' stamp='0.550'/>
</phase>
<phase_done name='buildIR' stamp='0.550'/>
</phase>
<phase name='emit_lir' stamp='0.550'>
<phase name='lirGeneration' stamp='0.550'>
<phase_done name='lirGeneration' stamp='0.550'/>
</phase>
<phase name='linearScan' stamp='0.550'>
<phase_done name='linearScan' stamp='0.550'/>
</phase>
<phase_done name='emit_lir' stamp='0.550'/>
</phase>
<phase name='codeemit' stamp='0.550'>
<phase_done name='codeemit' stamp='0.550'/>
</phase>
<phase name='codeinstall' stamp='0.550'>
<phase_done name='codeinstall' stamp='0.551'/>
</phase>
<code_cache total_blobs='256' nmethods='3' adapters='168' free_code_cache='250556096'/>
<task_done success='1' nmsize='1360' count='2265' backedge_count='5120' stamp='0.551'/>
</task>
<task compile_id='6' method='java/lang/Math min (II)I' bytes='11' count='3584' iicount='3584' level='3' stamp='0.556'>
<phase name='buildIR' stamp='0.556'>
<type id='707' name='int'/>
<klass id='817' name='java/lang/Math' flags='17'/>
<method id='818' holder='817' name='min' return='707' arguments='707 707' flags='9' bytes='11' iicount='3584'/>
<parse method='818'  stamp='0.556'>
<parse_done stamp='0.556'/>
</parse>
<phase name='optimize_blocks' stamp='0.556'>
<phase_done name='optimize_blocks' stamp='0.556'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.557'>
<phase_done name='rangeCheckElimination' stamp='0.557'/>
</phase>
<phase name='optimize_null_checks' stamp='0.557'>
<phase_done name='optimize_null_checks' stamp='0.557'/>
</phase>
<phase_done name='buildIR' stamp='0.557'/>
</phase>
<phase name='emit_lir' stamp='0.557'>
<phase name='lirGeneration' stamp='0.557'>
<phase_done name='lirGeneration' stamp='0.557'/>
</phase>
<phase name='linearScan' stamp='0.557'>
<phase_done name='linearScan' stamp='0.557'/>
</phase>
<phase_done name='emit_lir' stamp='0.557'/>
</phase>
<phase name='codeemit' stamp='0.557'>
<phase_done name='codeemit' stamp='0.557'/>
</phase>
<phase name='codeinstall' stamp='0.557'>
<phase_done name='codeinstall' stamp='0.557'/>
</phase>
<code_cache total_blobs='260' nmethods='5' adapters='168' free_code_cache='250542208'/>
<task_done success='1' nmsize='400' count='3584' stamp='0.557'/>
</task>
<task compile_id='7' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='384' iicount='384' level='3' stamp='0.558'>
<phase name='buildIR' stamp='0.558'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='817' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' iicount='384'/>
<parse method='817'  stamp='0.558'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='819' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='5838'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='778'/>
<parse_done stamp='0.558'/>
</parse>
<parse_done stamp='0.558'/>
</parse>
<phase name='optimize_blocks' stamp='0.558'>
<phase_done name='optimize_blocks' stamp='0.558'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.558'>
<phase_done name='rangeCheckElimination' stamp='0.558'/>
</phase>
<phase name='optimize_null_checks' stamp='0.558'>
<phase_done name='optimize_null_checks' stamp='0.558'/>
</phase>
<phase_done name='buildIR' stamp='0.558'/>
</phase>
<phase name='emit_lir' stamp='0.558'>
<phase name='lirGeneration' stamp='0.558'>
<phase_done name='lirGeneration' stamp='0.558'/>
</phase>
<phase name='linearScan' stamp='0.558'>
<phase_done name='linearScan' stamp='0.558'/>
</phase>
<phase_done name='emit_lir' stamp='0.558'/>
</phase>
<phase name='codeemit' stamp='0.558'>
<phase_done name='codeemit' stamp='0.558'/>
</phase>
<phase name='codeinstall' stamp='0.558'>
<dependency type='no_finalizable_subclasses' ctxk='778'/>
<phase_done name='codeinstall' stamp='0.558'/>
</phase>
<code_cache total_blobs='262' nmethods='7' adapters='170' free_code_cache='250550656'/>
<task_done success='1' nmsize='592' count='384' inlined_bytes='1' stamp='0.558'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' level='3' stamp='0.559'>
<phase name='buildIR' stamp='0.559'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='707' flags='1' bytes='7' iicount='896'/>
<parse method='817'  stamp='0.559'>
<bc code='182' bci='3'/>
<method id='819' holder='715' name='indexOf' return='707' arguments='707 707' flags='1' bytes='70' iicount='916'/>
<call method='819' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.559'/>
</parse>
<phase name='optimize_blocks' stamp='0.559'>
<phase_done name='optimize_blocks' stamp='0.559'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.559'>
<phase_done name='rangeCheckElimination' stamp='0.559'/>
</phase>
<phase name='optimize_null_checks' stamp='0.559'>
<phase_done name='optimize_null_checks' stamp='0.559'/>
</phase>
<phase_done name='buildIR' stamp='0.559'/>
</phase>
<phase name='emit_lir' stamp='0.559'>
<phase name='lirGeneration' stamp='0.559'>
<phase_done name='lirGeneration' stamp='0.559'/>
</phase>
<phase name='linearScan' stamp='0.559'>
<phase_done name='linearScan' stamp='0.559'/>
</phase>
<phase_done name='emit_lir' stamp='0.559'/>
</phase>
<phase name='codeemit' stamp='0.559'>
<phase_done name='codeemit' stamp='0.559'/>
</phase>
<phase name='codeinstall' stamp='0.559'>
<phase_done name='codeinstall' stamp='0.559'/>
</phase>
<code_cache total_blobs='263' nmethods='8' adapters='170' free_code_cache='250549568'/>
<task_done success='1' nmsize='520' count='896' stamp='0.559'/>
</task>
<task compile_id='10' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='1537' iicount='1537' level='3' stamp='0.601'>
<phase name='buildIR' stamp='0.601'>
<type id='709' name='void'/>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' iicount='1539'/>
<parse method='817'  stamp='0.601'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='819' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='5864'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<parse_done stamp='0.601'/>
</parse>
<bc code='183' bci='13'/>
<klass id='821' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='822' holder='821' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='26'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='45'/>
<call method='822' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='55'/>
<klass id='823' name='java/util/Arrays' flags='1'/>
<method id='824' holder='823' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' iicount='1600'/>
<call method='824' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.602'/>
</parse>
<phase name='optimize_blocks' stamp='0.602'>
<phase_done name='optimize_blocks' stamp='0.602'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.602'>
<phase_done name='rangeCheckElimination' stamp='0.602'/>
</phase>
<phase name='optimize_null_checks' stamp='0.602'>
<phase_done name='optimize_null_checks' stamp='0.602'/>
</phase>
<phase_done name='buildIR' stamp='0.602'/>
</phase>
<phase name='emit_lir' stamp='0.602'>
<phase name='lirGeneration' stamp='0.602'>
<phase_done name='lirGeneration' stamp='0.602'/>
</phase>
<phase name='linearScan' stamp='0.602'>
<phase_done name='linearScan' stamp='0.603'/>
</phase>
<phase_done name='emit_lir' stamp='0.603'/>
</phase>
<phase name='codeemit' stamp='0.603'>
<phase_done name='codeemit' stamp='0.604'/>
</phase>
<phase name='codeinstall' stamp='0.604'>
<phase_done name='codeinstall' stamp='0.605'/>
</phase>
<code_cache total_blobs='265' nmethods='10' adapters='170' free_code_cache='250545664'/>
<task_done success='1' nmsize='1080' count='1539' inlined_bytes='1' stamp='0.606'/>
</task>
<task compile_id='11' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='456' backedge_count='25600' iicount='456' level='3' stamp='0.606'>
<phase name='buildIR' stamp='0.606'>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='809' name='[B' flags='1041'/>
<klass id='817' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='818' holder='817' name='encode' return='707' arguments='806 707 707 809' flags='1' bytes='359' iicount='456'/>
<parse method='818'  stamp='0.606'>
<bc code='184' bci='14'/>
<klass id='820' name='java/lang/Math' flags='17'/>
<method id='821' holder='820' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='6' compiler='C1' level='3' iicount='3610'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.606'/>
</parse>
<bc code='184' bci='139'/>
<type id='701' name='boolean'/>
<type id='702' name='char'/>
<klass id='795' name='java/lang/Character' flags='17'/>
<method id='823' holder='795' name='isSurrogate' return='701' arguments='702' flags='9' bytes='18' iicount='1'/>
<call method='823' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.606'/>
</parse>
<bc code='183' bci='157'/>
<type id='709' name='void'/>
<klass id='825' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='826' holder='825' name='&lt;init&gt;' return='709' unloaded='1'/>
<call method='826' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='827' holder='825' name='parse' return='707' arguments='702 806 707 707' unloaded='1'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='829' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='828' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='830' holder='828' name='malformedInputAction' return='829' flags='1' bytes='5' iicount='1'/>
<call method='830' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<parse_done stamp='0.606'/>
</parse>
<parse_done stamp='0.606'/>
</parse>
<phase name='optimize_blocks' stamp='0.606'>
<phase_done name='optimize_blocks' stamp='0.606'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.606'>
<phase_done name='rangeCheckElimination' stamp='0.606'/>
</phase>
<phase name='optimize_null_checks' stamp='0.606'>
<phase_done name='optimize_null_checks' stamp='0.606'/>
</phase>
<phase_done name='buildIR' stamp='0.607'/>
</phase>
<phase name='emit_lir' stamp='0.607'>
<phase name='lirGeneration' stamp='0.607'>
<phase_done name='lirGeneration' stamp='0.607'/>
</phase>
<phase name='linearScan' stamp='0.607'>
<phase_done name='linearScan' stamp='0.607'/>
</phase>
<phase_done name='emit_lir' stamp='0.607'/>
</phase>
<phase name='codeemit' stamp='0.607'>
<phase_done name='codeemit' stamp='0.607'/>
</phase>
<phase name='codeinstall' stamp='0.607'>
<phase_done name='codeinstall' stamp='0.607'/>
</phase>
<code_cache total_blobs='266' nmethods='11' adapters='170' free_code_cache='250540096'/>
<task_done success='1' nmsize='2872' count='466' backedge_count='25983' inlined_bytes='34' stamp='0.608'/>
</task>
<task compile_id='13' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='1035' backedge_count='2626' iicount='1035' level='3' stamp='0.608'>
<phase name='buildIR' stamp='0.608'>
<type id='701' name='boolean'/>
<klass id='715' name='java/lang/String' flags='17'/>
<type id='707' name='int'/>
<method id='817' holder='715' name='startsWith' return='701' arguments='715 707' flags='1' bytes='72' iicount='1035'/>
<parse method='817'  stamp='0.608'>
<parse_done stamp='0.608'/>
</parse>
<phase name='optimize_blocks' stamp='0.608'>
<phase_done name='optimize_blocks' stamp='0.608'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.608'>
<phase_done name='rangeCheckElimination' stamp='0.608'/>
</phase>
<phase name='optimize_null_checks' stamp='0.608'>
<phase_done name='optimize_null_checks' stamp='0.608'/>
</phase>
<phase_done name='buildIR' stamp='0.608'/>
</phase>
<phase name='emit_lir' stamp='0.608'>
<phase name='lirGeneration' stamp='0.608'>
<phase_done name='lirGeneration' stamp='0.608'/>
</phase>
<phase name='linearScan' stamp='0.608'>
<phase_done name='linearScan' stamp='0.608'/>
</phase>
<phase_done name='emit_lir' stamp='0.608'/>
</phase>
<phase name='codeemit' stamp='0.608'>
<phase_done name='codeemit' stamp='0.608'/>
</phase>
<phase name='codeinstall' stamp='0.608'>
<phase_done name='codeinstall' stamp='0.608'/>
</phase>
<code_cache total_blobs='267' nmethods='12' adapters='170' free_code_cache='250538240'/>
<task_done success='1' nmsize='816' count='1036' backedge_count='2627' stamp='0.608'/>
</task>
<task compile_id='12' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='542' iicount='542' level='3' stamp='0.608'>
<phase name='buildIR' stamp='0.608'>
<type id='701' name='boolean'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='startsWith' return='701' arguments='715' flags='1' bytes='7' iicount='543'/>
<parse method='817'  stamp='0.608'>
<bc code='182' bci='3'/>
<type id='707' name='int'/>
<method id='819' holder='715' name='startsWith' return='701' arguments='715 707' flags='1' bytes='72' compile_id='13' compiler='C1' level='3' iicount='1040'/>
<call method='819' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.608'/>
</parse>
<phase name='optimize_blocks' stamp='0.608'>
<phase_done name='optimize_blocks' stamp='0.608'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.608'>
<phase_done name='rangeCheckElimination' stamp='0.608'/>
</phase>
<phase name='optimize_null_checks' stamp='0.608'>
<phase_done name='optimize_null_checks' stamp='0.608'/>
</phase>
<phase_done name='buildIR' stamp='0.608'/>
</phase>
<phase name='emit_lir' stamp='0.608'>
<phase name='lirGeneration' stamp='0.608'>
<phase_done name='lirGeneration' stamp='0.608'/>
</phase>
<phase name='linearScan' stamp='0.608'>
<phase_done name='linearScan' stamp='0.608'/>
</phase>
<phase_done name='emit_lir' stamp='0.608'/>
</phase>
<phase name='codeemit' stamp='0.608'>
<phase_done name='codeemit' stamp='0.608'/>
</phase>
<phase name='codeinstall' stamp='0.608'>
<phase_done name='codeinstall' stamp='0.608'/>
</phase>
<code_cache total_blobs='268' nmethods='13' adapters='170' free_code_cache='250537024'/>
<task_done success='1' nmsize='520' count='546' stamp='0.608'/>
</task>
<task compile_id='15' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='124' backedge_count='8311' iicount='124' level='3' stamp='0.609'>
<phase name='buildIR' stamp='0.609'>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='806 707 707 806 707 707 707' flags='8' bytes='166' iicount='124'/>
<parse method='817'  stamp='0.609'>
<parse_done stamp='0.609'/>
</parse>
<phase name='optimize_blocks' stamp='0.609'>
<phase_done name='optimize_blocks' stamp='0.609'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.609'>
<phase_done name='rangeCheckElimination' stamp='0.609'/>
</phase>
<phase name='optimize_null_checks' stamp='0.609'>
<phase_done name='optimize_null_checks' stamp='0.609'/>
</phase>
<phase_done name='buildIR' stamp='0.609'/>
</phase>
<phase name='emit_lir' stamp='0.609'>
<phase name='lirGeneration' stamp='0.609'>
<phase_done name='lirGeneration' stamp='0.609'/>
</phase>
<phase name='linearScan' stamp='0.609'>
<phase_done name='linearScan' stamp='0.609'/>
</phase>
<phase_done name='emit_lir' stamp='0.609'/>
</phase>
<phase name='codeemit' stamp='0.609'>
<phase_done name='codeemit' stamp='0.609'/>
</phase>
<phase name='codeinstall' stamp='0.609'>
<phase_done name='codeinstall' stamp='0.610'/>
</phase>
<code_cache total_blobs='269' nmethods='14' adapters='170' free_code_cache='250533760'/>
<task_done success='1' nmsize='1616' count='124' backedge_count='8311' stamp='0.610'/>
</task>
<task compile_id='14' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='257' iicount='257' level='1' stamp='0.610'>
<phase name='buildIR' stamp='0.610'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='786' name='java/net/URL' flags='17'/>
<method id='817' holder='786' name='getAuthority' return='715' flags='1' bytes='5' iicount='257'/>
<parse method='817'  stamp='0.610'>
<parse_done stamp='0.610'/>
</parse>
<phase name='optimize_blocks' stamp='0.610'>
<phase_done name='optimize_blocks' stamp='0.610'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.610'>
<phase_done name='rangeCheckElimination' stamp='0.610'/>
</phase>
<phase name='optimize_null_checks' stamp='0.610'>
<phase_done name='optimize_null_checks' stamp='0.610'/>
</phase>
<phase_done name='buildIR' stamp='0.610'/>
</phase>
<phase name='emit_lir' stamp='0.610'>
<phase name='lirGeneration' stamp='0.610'>
<phase_done name='lirGeneration' stamp='0.610'/>
</phase>
<phase name='linearScan' stamp='0.610'>
<phase_done name='linearScan' stamp='0.610'/>
</phase>
<phase_done name='emit_lir' stamp='0.610'/>
</phase>
<phase name='codeemit' stamp='0.610'>
<phase_done name='codeemit' stamp='0.610'/>
</phase>
<phase name='codeinstall' stamp='0.610'>
<phase_done name='codeinstall' stamp='0.610'/>
</phase>
<code_cache total_blobs='270' nmethods='15' adapters='170' free_code_cache='250532992'/>
<task_done success='1' nmsize='272' count='257' stamp='0.610'/>
</task>
<task compile_id='16' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='242' backedge_count='14342' iicount='242' level='3' stamp='0.612'>
<phase name='buildIR' stamp='0.612'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='java/io/UnixFileSystem' flags='0'/>
<method id='818' holder='817' name='normalize' return='715' arguments='715' flags='1' bytes='75' iicount='242'/>
<parse method='818'  stamp='0.612'>
<bc code='182' bci='1'/>
<type id='707' name='int'/>
<method id='820' holder='715' name='length' return='707' flags='1' bytes='6' iicount='2643'/>
<call method='820' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='820'>
<parse_done stamp='0.612'/>
</parse>
<bc code='182' bci='19'/>
<type id='702' name='char'/>
<method id='822' holder='715' name='charAt' return='702' arguments='707' flags='1' bytes='29' compile_id='5' compiler='C2' level='4' iicount='18074'/>
<call method='822' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='822'>
<bc code='183' bci='18'/>
<type id='709' name='void'/>
<klass id='824' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='825' holder='824' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='825' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.612'/>
</parse>
<bc code='183' bci='44'/>
<method id='826' holder='817' name='normalize' return='715' arguments='715 707 707' flags='2' bytes='132' iicount='3'/>
<call method='826' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='69'/>
<call method='826' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.613'/>
</parse>
<phase name='optimize_blocks' stamp='0.613'>
<phase_done name='optimize_blocks' stamp='0.613'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.613'>
<phase_done name='rangeCheckElimination' stamp='0.613'/>
</phase>
<phase name='optimize_null_checks' stamp='0.613'>
<phase_done name='optimize_null_checks' stamp='0.613'/>
</phase>
<phase_done name='buildIR' stamp='0.613'/>
</phase>
<phase name='emit_lir' stamp='0.613'>
<phase name='lirGeneration' stamp='0.613'>
<phase_done name='lirGeneration' stamp='0.613'/>
</phase>
<phase name='linearScan' stamp='0.613'>
<phase_done name='linearScan' stamp='0.613'/>
</phase>
<phase_done name='emit_lir' stamp='0.613'/>
</phase>
<phase name='codeemit' stamp='0.613'>
<phase_done name='codeemit' stamp='0.613'/>
</phase>
<phase name='codeinstall' stamp='0.613'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.614'/>
</phase>
<code_cache total_blobs='271' nmethods='16' adapters='170' free_code_cache='250529792'/>
<task_done success='1' nmsize='1608' count='243' backedge_count='14408' inlined_bytes='35' stamp='0.614'/>
</task>
<task compile_id='17' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='770' iicount='771' level='3' stamp='0.617'>
<phase name='buildIR' stamp='0.617'>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' iicount='783'/>
<parse method='817'  stamp='0.617'>
<bc code='183' bci='2'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' iicount='973'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.617'/>
</parse>
<phase name='optimize_blocks' stamp='0.617'>
<phase_done name='optimize_blocks' stamp='0.617'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.617'>
<phase_done name='rangeCheckElimination' stamp='0.617'/>
</phase>
<phase name='optimize_null_checks' stamp='0.617'>
<phase_done name='optimize_null_checks' stamp='0.617'/>
</phase>
<phase_done name='buildIR' stamp='0.617'/>
</phase>
<phase name='emit_lir' stamp='0.617'>
<phase name='lirGeneration' stamp='0.617'>
<phase_done name='lirGeneration' stamp='0.617'/>
</phase>
<phase name='linearScan' stamp='0.617'>
<phase_done name='linearScan' stamp='0.618'/>
</phase>
<phase_done name='emit_lir' stamp='0.618'/>
</phase>
<phase name='codeemit' stamp='0.618'>
<phase_done name='codeemit' stamp='0.618'/>
</phase>
<phase name='codeinstall' stamp='0.618'>
<phase_done name='codeinstall' stamp='0.618'/>
</phase>
<code_cache total_blobs='272' nmethods='17' adapters='170' free_code_cache='250528832'/>
<task_done success='1' nmsize='392' count='852' stamp='0.618'/>
</task>
<task compile_id='18' method='java/lang/String length ()I' bytes='6' count='2754' iicount='2754' level='3' stamp='0.618'>
<phase name='buildIR' stamp='0.618'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='length' return='707' flags='1' bytes='6' iicount='2754'/>
<parse method='817'  stamp='0.618'>
<parse_done stamp='0.618'/>
</parse>
<phase name='optimize_blocks' stamp='0.618'>
<phase_done name='optimize_blocks' stamp='0.618'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.618'>
<phase_done name='rangeCheckElimination' stamp='0.618'/>
</phase>
<phase name='optimize_null_checks' stamp='0.618'>
<phase_done name='optimize_null_checks' stamp='0.618'/>
</phase>
<phase_done name='buildIR' stamp='0.618'/>
</phase>
<phase name='emit_lir' stamp='0.618'>
<phase name='lirGeneration' stamp='0.618'>
<phase_done name='lirGeneration' stamp='0.618'/>
</phase>
<phase name='linearScan' stamp='0.618'>
<phase_done name='linearScan' stamp='0.618'/>
</phase>
<phase_done name='emit_lir' stamp='0.618'/>
</phase>
<phase name='codeemit' stamp='0.618'>
<phase_done name='codeemit' stamp='0.618'/>
</phase>
<phase name='codeinstall' stamp='0.618'>
<phase_done name='codeinstall' stamp='0.618'/>
</phase>
<code_cache total_blobs='273' nmethods='18' adapters='170' free_code_cache='250527872'/>
<task_done success='1' nmsize='368' count='2915' stamp='0.619'/>
</task>
<task compile_id='21' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='16' count='1617' iicount='1617' level='3' stamp='0.619'>
<phase name='buildIR' stamp='0.619'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='817' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' iicount='1672'/>
<parse method='817'  stamp='0.619'>
<bc code='182' bci='12'/>
<method id='819' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='478'/>
<call method='819' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='778' x='819'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.619'/>
</parse>
<phase name='optimize_blocks' stamp='0.619'>
<phase_done name='optimize_blocks' stamp='0.619'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.619'>
<phase_done name='rangeCheckElimination' stamp='0.619'/>
</phase>
<phase name='optimize_null_checks' stamp='0.619'>
<phase_done name='optimize_null_checks' stamp='0.619'/>
</phase>
<phase_done name='buildIR' stamp='0.619'/>
</phase>
<phase name='emit_lir' stamp='0.619'>
<phase name='lirGeneration' stamp='0.619'>
<phase_done name='lirGeneration' stamp='0.619'/>
</phase>
<phase name='linearScan' stamp='0.619'>
<phase_done name='linearScan' stamp='0.619'/>
</phase>
<phase_done name='emit_lir' stamp='0.619'/>
</phase>
<phase name='codeemit' stamp='0.619'>
<phase_done name='codeemit' stamp='0.619'/>
</phase>
<phase name='codeinstall' stamp='0.619'>
<dependency type='unique_concrete_method' ctxk='778' x='819'/>
<phase_done name='codeinstall' stamp='0.619'/>
</phase>
<code_cache total_blobs='274' nmethods='19' adapters='170' free_code_cache='250526656'/>
<task_done success='1' nmsize='584' count='2087' stamp='0.619'/>
</task>
<task compile_id='19' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='1799' iicount='1800' level='3' stamp='0.619'>
<phase name='buildIR' stamp='0.620'>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' iicount='1814'/>
<parse method='817'  stamp='0.620'>
<bc code='183' bci='5'/>
<method id='819' holder='778' name='appendNull' return='778' flags='2' bytes='56' iicount='1'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='707' name='int'/>
<method id='821' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='18' compiler='C1' level='3' iicount='3529'/>
<call method='821' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.620'/>
</parse>
<bc code='183' bci='21'/>
<type id='709' name='void'/>
<method id='823' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' compile_id='21' compiler='C1' level='3' iicount='2196'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='182' bci='12'/>
<method id='825' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='478'/>
<call method='825' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='778' x='825'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.621'/>
</parse>
<bc code='182' bci='35'/>
<klass id='806' name='[C' flags='1041'/>
<method id='827' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' iicount='1813'/>
<call method='827' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.621'/>
</parse>
<phase name='optimize_blocks' stamp='0.621'>
<phase_done name='optimize_blocks' stamp='0.621'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.621'>
<phase_done name='rangeCheckElimination' stamp='0.621'/>
</phase>
<phase name='optimize_null_checks' stamp='0.621'>
<phase_done name='optimize_null_checks' stamp='0.621'/>
</phase>
<phase_done name='buildIR' stamp='0.621'/>
</phase>
<phase name='emit_lir' stamp='0.621'>
<phase name='lirGeneration' stamp='0.621'>
<phase_done name='lirGeneration' stamp='0.621'/>
</phase>
<phase name='linearScan' stamp='0.621'>
<phase_done name='linearScan' stamp='0.621'/>
</phase>
<phase_done name='emit_lir' stamp='0.621'/>
</phase>
<phase name='codeemit' stamp='0.621'>
<phase_done name='codeemit' stamp='0.621'/>
</phase>
<phase name='codeinstall' stamp='0.621'>
<dependency type='unique_concrete_method' ctxk='778' x='825'/>
<phase_done name='codeinstall' stamp='0.621'/>
</phase>
<code_cache total_blobs='275' nmethods='20' adapters='170' free_code_cache='250524160'/>
<task_done success='1' nmsize='1288' count='1869' inlined_bytes='22' stamp='0.621'/>
</task>
<task compile_id='26' method='java/lang/String length ()I' bytes='6' count='3586' iicount='3586' level='1' stamp='0.621'>
<phase name='buildIR' stamp='0.621'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='18' compiler='C1' level='3' iicount='3586'/>
<parse method='817'  stamp='0.621'>
<parse_done stamp='0.621'/>
</parse>
<phase name='optimize_blocks' stamp='0.621'>
<phase_done name='optimize_blocks' stamp='0.621'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.621'>
<phase_done name='rangeCheckElimination' stamp='0.621'/>
</phase>
<phase name='optimize_null_checks' stamp='0.621'>
<phase_done name='optimize_null_checks' stamp='0.621'/>
</phase>
<phase_done name='buildIR' stamp='0.621'/>
</phase>
<phase name='emit_lir' stamp='0.621'>
<phase name='lirGeneration' stamp='0.621'>
<phase_done name='lirGeneration' stamp='0.621'/>
</phase>
<phase name='linearScan' stamp='0.621'>
<phase_done name='linearScan' stamp='0.621'/>
</phase>
<phase_done name='emit_lir' stamp='0.621'/>
</phase>
<phase name='codeemit' stamp='0.621'>
<phase_done name='codeemit' stamp='0.621'/>
</phase>
<phase name='codeinstall' stamp='0.621'>
<phase_done name='codeinstall' stamp='0.622'/>
</phase>
<code_cache total_blobs='276' nmethods='21' adapters='170' free_code_cache='250523328'/>
<task_done success='1' nmsize='272' count='3587' stamp='0.622'/>
</task>
<task compile_id='20' method='java/lang/String getChars (II[CI)V' bytes='62' count='1872' iicount='1872' level='3' stamp='0.622'>
<phase name='buildIR' stamp='0.622'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' iicount='1872'/>
<parse method='817'  stamp='0.622'>
<bc code='183' bci='9'/>
<klass id='819' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='820' holder='819' name='&lt;init&gt;' return='709' arguments='707' unloaded='1'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='820' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='821' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='821' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.622'/>
</parse>
<phase name='optimize_blocks' stamp='0.622'>
<phase_done name='optimize_blocks' stamp='0.622'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.622'>
<phase_done name='rangeCheckElimination' stamp='0.622'/>
</phase>
<phase name='optimize_null_checks' stamp='0.622'>
<phase_done name='optimize_null_checks' stamp='0.622'/>
</phase>
<phase_done name='buildIR' stamp='0.622'/>
</phase>
<phase name='emit_lir' stamp='0.622'>
<phase name='lirGeneration' stamp='0.622'>
<phase_done name='lirGeneration' stamp='0.622'/>
</phase>
<phase name='linearScan' stamp='0.622'>
<phase_done name='linearScan' stamp='0.622'/>
</phase>
<phase_done name='emit_lir' stamp='0.622'/>
</phase>
<phase name='codeemit' stamp='0.622'>
<phase_done name='codeemit' stamp='0.622'/>
</phase>
<phase name='codeinstall' stamp='0.622'>
<phase_done name='codeinstall' stamp='0.622'/>
</phase>
<code_cache total_blobs='277' nmethods='22' adapters='170' free_code_cache='250521024'/>
<task_done success='1' nmsize='1080' count='1872' stamp='0.622'/>
</task>
<task compile_id='22' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='2081' iicount='2081' level='3' stamp='0.622'>
<phase name='buildIR' stamp='0.623'>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='817' name='java/util/Arrays' flags='1'/>
<method id='818' holder='817' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' iicount='2081'/>
<parse method='818'  stamp='0.623'>
<bc code='183' bci='16'/>
<type id='709' name='void'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='821' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' iicount='834'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='3'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='823' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' compile_id='7' compiler='C1' level='3' iicount='911'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='825' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='7004'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<parse_done stamp='0.623'/>
</parse>
<bc code='182' bci='20'/>
<method id='827' holder='780' name='append' return='780' arguments='707' flags='1' bytes='8' iicount='6'/>
<call method='827' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<bc code='183' bci='2'/>
<method id='829' holder='778' name='append' return='778' arguments='707' flags='1' bytes='62' iicount='6'/>
<call method='829' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.623'/>
</parse>
<bc code='182' bci='25'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='832' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='1892'/>
<call method='832' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='832'>
<bc code='183' bci='2'/>
<method id='834' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='19' compiler='C1' level='3' iicount='2078'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.623'/>
</parse>
<bc code='182' bci='29'/>
<call method='827' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<bc code='183' bci='2'/>
<call method='829' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.624'/>
</parse>
<bc code='182' bci='32'/>
<method id='836' holder='780' name='toString' return='715' flags='1' bytes='17' iicount='892'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='13'/>
<method id='838' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='10' compiler='C1' level='3' iicount='2123'/>
<call method='838' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.624'/>
</parse>
<bc code='183' bci='35'/>
<klass id='820' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='840' holder='820' name='&lt;init&gt;' return='709' arguments='715' flags='1' bytes='6' iicount='1'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='6' compiler='C1' level='3' iicount='4365'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<parse_done stamp='0.624'/>
</parse>
<bc code='184' bci='57'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='845' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.624'/>
</parse>
<phase name='optimize_blocks' stamp='0.624'>
<phase_done name='optimize_blocks' stamp='0.624'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.624'>
<phase_done name='rangeCheckElimination' stamp='0.624'/>
</phase>
<phase name='optimize_null_checks' stamp='0.624'>
<phase_done name='optimize_null_checks' stamp='0.624'/>
</phase>
<phase_done name='buildIR' stamp='0.624'/>
</phase>
<phase name='emit_lir' stamp='0.624'>
<phase name='lirGeneration' stamp='0.624'>
<phase_done name='lirGeneration' stamp='0.624'/>
</phase>
<phase name='linearScan' stamp='0.624'>
<phase_done name='linearScan' stamp='0.624'/>
</phase>
<phase_done name='emit_lir' stamp='0.624'/>
</phase>
<phase name='codeemit' stamp='0.624'>
<phase_done name='codeemit' stamp='0.625'/>
</phase>
<phase name='codeinstall' stamp='0.625'>
<phase_done name='codeinstall' stamp='0.625'/>
</phase>
<code_cache total_blobs='278' nmethods='23' adapters='170' free_code_cache='250516096'/>
<task_done success='1' nmsize='2872' count='2286' inlined_bytes='72' stamp='0.625'/>
</task>
<task compile_id='23' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='995' iicount='995' level='3' stamp='0.625'>
<phase name='buildIR' stamp='0.625'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='817' holder='780' name='toString' return='715' flags='1' bytes='17' iicount='995'/>
<parse method='817'  stamp='0.625'>
<bc code='183' bci='13'/>
<type id='709' name='void'/>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<method id='819' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='10' compiler='C1' level='3' iicount='2222'/>
<call method='819' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.625'/>
</parse>
<phase name='optimize_blocks' stamp='0.625'>
<phase_done name='optimize_blocks' stamp='0.625'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.625'>
<phase_done name='rangeCheckElimination' stamp='0.625'/>
</phase>
<phase name='optimize_null_checks' stamp='0.625'>
<phase_done name='optimize_null_checks' stamp='0.625'/>
</phase>
<phase_done name='buildIR' stamp='0.625'/>
</phase>
<phase name='emit_lir' stamp='0.625'>
<phase name='lirGeneration' stamp='0.625'>
<phase_done name='lirGeneration' stamp='0.625'/>
</phase>
<phase name='linearScan' stamp='0.625'>
<phase_done name='linearScan' stamp='0.625'/>
</phase>
<phase_done name='emit_lir' stamp='0.625'/>
</phase>
<phase name='codeemit' stamp='0.625'>
<phase_done name='codeemit' stamp='0.625'/>
</phase>
<phase name='codeinstall' stamp='0.625'>
<phase_done name='codeinstall' stamp='0.625'/>
</phase>
<code_cache total_blobs='279' nmethods='24' adapters='170' free_code_cache='250514944'/>
<task_done success='1' nmsize='520' count='1025' stamp='0.625'/>
</task>
<task compile_id='25' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1029' iicount='1030' level='3' stamp='0.625'>
<phase name='buildIR' stamp='0.625'>
<type id='709' name='void'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='817' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' iicount='1146'/>
<parse method='817'  stamp='0.625'>
<bc code='183' bci='3'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='819' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' compile_id='7' compiler='C1' level='3' iicount='1329'/>
<call method='819' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='819'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='821' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='8128'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<parse_done stamp='0.626'/>
</parse>
<parse_done stamp='0.626'/>
</parse>
<parse_done stamp='0.626'/>
</parse>
<phase name='optimize_blocks' stamp='0.626'>
<phase_done name='optimize_blocks' stamp='0.626'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.626'>
<phase_done name='rangeCheckElimination' stamp='0.626'/>
</phase>
<phase name='optimize_null_checks' stamp='0.626'>
<phase_done name='optimize_null_checks' stamp='0.626'/>
</phase>
<phase_done name='buildIR' stamp='0.626'/>
</phase>
<phase name='emit_lir' stamp='0.626'>
<phase name='lirGeneration' stamp='0.626'>
<phase_done name='lirGeneration' stamp='0.626'/>
</phase>
<phase name='linearScan' stamp='0.626'>
<phase_done name='linearScan' stamp='0.626'/>
</phase>
<phase_done name='emit_lir' stamp='0.626'/>
</phase>
<phase name='codeemit' stamp='0.626'>
<phase_done name='codeemit' stamp='0.626'/>
</phase>
<phase name='codeinstall' stamp='0.626'>
<phase_done name='codeinstall' stamp='0.626'/>
</phase>
<code_cache total_blobs='280' nmethods='25' adapters='170' free_code_cache='250513600'/>
<task_done success='1' nmsize='688' count='2241' inlined_bytes='13' stamp='0.626'/>
</task>
<task compile_id='24' method='com/ibeetl/code/jit/HelloWorld getMessage ()Ljava/lang/String;' bytes='3' count='2029' iicount='2029' level='1' stamp='0.626'>
<phase name='buildIR' stamp='0.626'>
<klass id='715' name='java/lang/String' flags='17'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='818' holder='817' name='getMessage' return='715' flags='33' bytes='3' iicount='2077'/>
<parse method='818'  stamp='0.626'>
<parse_done stamp='0.627'/>
</parse>
<phase name='optimize_blocks' stamp='0.627'>
<phase_done name='optimize_blocks' stamp='0.627'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.627'>
<phase_done name='rangeCheckElimination' stamp='0.627'/>
</phase>
<phase name='optimize_null_checks' stamp='0.627'>
<phase_done name='optimize_null_checks' stamp='0.627'/>
</phase>
<phase_done name='buildIR' stamp='0.627'/>
</phase>
<phase name='emit_lir' stamp='0.627'>
<phase name='lirGeneration' stamp='0.627'>
<phase_done name='lirGeneration' stamp='0.627'/>
</phase>
<phase name='linearScan' stamp='0.627'>
<phase_done name='linearScan' stamp='0.627'/>
</phase>
<phase_done name='emit_lir' stamp='0.627'/>
</phase>
<phase name='codeemit' stamp='0.627'>
<phase_done name='codeemit' stamp='0.627'/>
</phase>
<phase name='codeinstall' stamp='0.627'>
<phase_done name='codeinstall' stamp='0.627'/>
</phase>
<code_cache total_blobs='281' nmethods='26' adapters='170' free_code_cache='250512448'/>
<task_done success='1' nmsize='624' count='2535' stamp='0.627'/>
</task>
<task compile_id='27' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='2643' iicount='2643' level='3' stamp='0.627'>
<phase name='buildIR' stamp='0.627'>
<type id='709' name='void'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='818' holder='817' name='sayHello' return='709' flags='1' bytes='26' iicount='2688'/>
<parse method='818'  stamp='0.627'>
<bc code='182' bci='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='820' holder='817' name='getMessage' return='715' flags='33' bytes='3' compile_id='24' compiler='C1' level='1' iicount='2535'/>
<call method='820' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='817'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='820'>
<parse_done stamp='0.627'/>
</parse>
<bc code='183' bci='9'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='823' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' compile_id='25' compiler='C1' level='3' iicount='3039'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<bc code='183' bci='3'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='825' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' compile_id='7' compiler='C1' level='3' iicount='3158'/>
<call method='825' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='825'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='827' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='11484'/>
<call method='827' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='827'>
<parse_done stamp='0.628'/>
</parse>
<parse_done stamp='0.628'/>
</parse>
<parse_done stamp='0.628'/>
</parse>
<bc code='182' bci='14'/>
<method id='830' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='6294'/>
<call method='830' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<bc code='183' bci='2'/>
<method id='832' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='19' compiler='C1' level='3' iicount='6480'/>
<call method='832' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.628'/>
</parse>
<bc code='182' bci='18'/>
<call method='830' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<bc code='183' bci='2'/>
<call method='832' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.628'/>
</parse>
<bc code='182' bci='21'/>
<method id='834' holder='780' name='toString' return='715' flags='1' bytes='17' compile_id='23' compiler='C1' level='3' iicount='3093'/>
<call method='834' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='13'/>
<klass id='806' name='[C' flags='1041'/>
<method id='836' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='10' compiler='C1' level='3' iicount='4321'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.628'/>
</parse>
<parse_done stamp='0.628'/>
</parse>
<phase name='optimize_blocks' stamp='0.628'>
<phase_done name='optimize_blocks' stamp='0.628'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.628'>
<phase_done name='rangeCheckElimination' stamp='0.628'/>
</phase>
<phase name='optimize_null_checks' stamp='0.628'>
<phase_done name='optimize_null_checks' stamp='0.628'/>
</phase>
<phase_done name='buildIR' stamp='0.628'/>
</phase>
<phase name='emit_lir' stamp='0.628'>
<phase name='lirGeneration' stamp='0.628'>
<phase_done name='lirGeneration' stamp='0.628'/>
</phase>
<phase name='linearScan' stamp='0.628'>
<phase_done name='linearScan' stamp='0.629'/>
</phase>
<phase_done name='emit_lir' stamp='0.629'/>
</phase>
<phase name='codeemit' stamp='0.629'>
<phase_done name='codeemit' stamp='0.629'/>
</phase>
<phase name='codeinstall' stamp='0.629'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.629'/>
</phase>
<code_cache total_blobs='282' nmethods='27' adapters='170' free_code_cache='250508864'/>
<task_done success='1' nmsize='2184' count='2768' inlined_bytes='56' stamp='0.629'/>
</task>
<task compile_id='33' compile_kind='osr' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='60416' iicount='1' osr_bci='10' level='3' stamp='0.660'>
<phase name='buildIR' stamp='0.661'>
<type id='709' name='void'/>
<klass id='818' name='[Ljava/lang/String;' flags='1041'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='819' holder='817' name='main' return='709' arguments='818' flags='9' bytes='27' iicount='1'/>
<parse method='819'  stamp='0.661'>
<bc code='183' bci='4'/>
<method id='821' holder='817' name='&lt;init&gt;' return='709' flags='1' bytes='5' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='823' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='21086'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.661'/>
</parse>
<parse_done stamp='0.661'/>
</parse>
<bc code='182' bci='17'/>
<method id='825' holder='817' name='sayHello' return='709' flags='1' bytes='26' compile_id='32' compiler='C2' level='4' iicount='8387'/>
<call method='825' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='817' x='825'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='825'>
<bc code='182' bci='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='827' holder='817' name='getMessage' return='715' flags='33' bytes='3' compile_id='24' compiler='C1' level='1' iicount='8153'/>
<call method='827' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='817' x='827'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='827'>
<parse_done stamp='0.661'/>
</parse>
<bc code='183' bci='9'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='830' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' compile_id='25' compiler='C1' level='3' iicount='8710'/>
<call method='830' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<bc code='183' bci='3'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' compile_id='7' compiler='C1' level='3' iicount='8778'/>
<call method='832' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='832'>
<bc code='183' bci='1'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.661'/>
</parse>
<parse_done stamp='0.661'/>
</parse>
<parse_done stamp='0.661'/>
</parse>
<bc code='182' bci='14'/>
<method id='835' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='17534'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='2'/>
<method id='837' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='28' compiler='C2' level='4' iicount='14444'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.662'/>
</parse>
<bc code='182' bci='18'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='2'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.662'/>
</parse>
<bc code='182' bci='21'/>
<method id='839' holder='780' name='toString' return='715' flags='1' bytes='17' compile_id='23' compiler='C1' level='3' iicount='8713'/>
<call method='839' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='13'/>
<klass id='806' name='[C' flags='1041'/>
<method id='841' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='31' compiler='C2' level='4' iicount='8303'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.662'/>
</parse>
<parse_done stamp='0.662'/>
</parse>
<parse_done stamp='0.662'/>
</parse>
<phase name='optimize_blocks' stamp='0.662'>
<phase_done name='optimize_blocks' stamp='0.662'/>
</phase>
<phase name='optimize_null_checks' stamp='0.662'>
<phase_done name='optimize_null_checks' stamp='0.662'/>
</phase>
<phase_done name='buildIR' stamp='0.662'/>
</phase>
<phase name='emit_lir' stamp='0.662'>
<phase name='lirGeneration' stamp='0.662'>
<phase_done name='lirGeneration' stamp='0.662'/>
</phase>
<phase name='linearScan' stamp='0.662'>
<phase_done name='linearScan' stamp='0.662'/>
</phase>
<phase_done name='emit_lir' stamp='0.662'/>
</phase>
<phase name='codeemit' stamp='0.662'>
<phase_done name='codeemit' stamp='0.662'/>
</phase>
<phase name='codeinstall' stamp='0.662'>
<dependency type='leaf_type' ctxk='817'/>
<dependency type='unique_concrete_method' ctxk='817' x='825'/>
<dependency type='unique_concrete_method' ctxk='817' x='827'/>
<phase_done name='codeinstall' stamp='0.662'/>
</phase>
<code_cache total_blobs='288' nmethods='33' adapters='170' free_code_cache='250495168'/>
<task_done success='1' nmsize='2824' count='1' backedge_count='69012' inlined_bytes='88' stamp='0.662'/>
</task>
<task compile_id='34' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='69681' iicount='1' level='3' stamp='0.662'>
<phase name='buildIR' stamp='0.663'>
<type id='709' name='void'/>
<klass id='818' name='[Ljava/lang/String;' flags='1041'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='819' holder='817' name='main' return='709' arguments='818' flags='9' bytes='27' iicount='1'/>
<parse method='819'  stamp='0.663'>
<bc code='183' bci='4'/>
<method id='821' holder='817' name='&lt;init&gt;' return='709' flags='1' bytes='5' iicount='1'/>
<call method='821' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='821'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='823' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='21376'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.663'/>
</parse>
<parse_done stamp='0.663'/>
</parse>
<bc code='182' bci='17'/>
<method id='825' holder='817' name='sayHello' return='709' flags='1' bytes='26' compile_id='32' compiler='C2' level='4' iicount='8919'/>
<call method='825' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='825'>
<bc code='182' bci='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='827' holder='817' name='getMessage' return='715' flags='33' bytes='3' compile_id='24' compiler='C1' level='1' iicount='8718'/>
<call method='827' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='817'/>
<parse method='827'>
<parse_done stamp='0.663'/>
</parse>
<bc code='183' bci='9'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='830' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' compile_id='25' compiler='C1' level='3' iicount='9275'/>
<call method='830' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='830'>
<bc code='183' bci='3'/>
<type id='707' name='int'/>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='778' name='&lt;init&gt;' return='709' arguments='707' flags='0' bytes='12' compile_id='7' compiler='C1' level='3' iicount='9343'/>
<call method='832' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='832'>
<bc code='183' bci='1'/>
<call method='823' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='823'>
<parse_done stamp='0.663'/>
</parse>
<parse_done stamp='0.663'/>
</parse>
<parse_done stamp='0.663'/>
</parse>
<bc code='182' bci='14'/>
<method id='835' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='18860'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='2'/>
<method id='837' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='28' compiler='C2' level='4' iicount='14444'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.663'/>
</parse>
<bc code='182' bci='18'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='2'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.663'/>
</parse>
<bc code='182' bci='21'/>
<method id='839' holder='780' name='toString' return='715' flags='1' bytes='17' compile_id='23' compiler='C1' level='3' iicount='9468'/>
<call method='839' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='13'/>
<klass id='806' name='[C' flags='1041'/>
<method id='841' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='31' compiler='C2' level='4' iicount='8303'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.664'/>
</parse>
<parse_done stamp='0.664'/>
</parse>
<parse_done stamp='0.664'/>
</parse>
<phase name='optimize_blocks' stamp='0.664'>
<phase_done name='optimize_blocks' stamp='0.664'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.664'>
<phase_done name='rangeCheckElimination' stamp='0.664'/>
</phase>
<phase name='optimize_null_checks' stamp='0.664'>
<phase_done name='optimize_null_checks' stamp='0.664'/>
</phase>
<phase_done name='buildIR' stamp='0.664'/>
</phase>
<phase name='emit_lir' stamp='0.664'>
<phase name='lirGeneration' stamp='0.664'>
<phase_done name='lirGeneration' stamp='0.664'/>
</phase>
<phase name='linearScan' stamp='0.664'>
<phase_done name='linearScan' stamp='0.664'/>
</phase>
<phase_done name='emit_lir' stamp='0.664'/>
</phase>
<phase name='codeemit' stamp='0.664'>
<phase_done name='codeemit' stamp='0.664'/>
</phase>
<phase name='codeinstall' stamp='0.664'>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='codeinstall' stamp='0.664'/>
</phase>
<code_cache total_blobs='289' nmethods='34' adapters='170' free_code_cache='250490688'/>
<task_done success='1' nmsize='2728' count='1' backedge_count='72210' inlined_bytes='88' stamp='0.664'/>
</task>
<task compile_id='36' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='799' iicount='799' level='1' stamp='0.784'>
<phase name='buildIR' stamp='0.784'>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='740' name='java/lang/ref/Reference' flags='1025'/>
<method id='817' holder='740' name='get' return='714' flags='1' bytes='5' iicount='799'/>
<parse method='817'  stamp='0.784'>
<parse_done stamp='0.784'/>
</parse>
<phase name='optimize_blocks' stamp='0.784'>
<phase_done name='optimize_blocks' stamp='0.784'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.784'>
<phase_done name='rangeCheckElimination' stamp='0.784'/>
</phase>
<phase name='optimize_null_checks' stamp='0.784'>
<phase_done name='optimize_null_checks' stamp='0.784'/>
</phase>
<phase_done name='buildIR' stamp='0.784'/>
</phase>
<phase name='emit_lir' stamp='0.784'>
<phase name='lirGeneration' stamp='0.784'>
<phase_done name='lirGeneration' stamp='0.784'/>
</phase>
<phase name='linearScan' stamp='0.784'>
<phase_done name='linearScan' stamp='0.784'/>
</phase>
<phase_done name='emit_lir' stamp='0.784'/>
</phase>
<phase name='codeemit' stamp='0.784'>
<phase_done name='codeemit' stamp='0.785'/>
</phase>
<phase name='codeinstall' stamp='0.785'>
<phase_done name='codeinstall' stamp='0.785'/>
</phase>
<code_cache total_blobs='291' nmethods='36' adapters='170' free_code_cache='250488192'/>
<task_done success='1' nmsize='272' count='799' stamp='0.785'/>
</task>
</compilation_log>
<compilation_log thread='17667'>
<start_compile_thread name='C2 CompilerThread1' thread='17667' process='79392' stamp='0.514'/>
<task compile_id='5' method='java/lang/String charAt (I)C' bytes='29' count='18048' iicount='18048' stamp='0.556'>
<phase name='parse' nodes='3' live='3' stamp='0.556'>
<type id='702' name='char'/>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='charAt' return='702' arguments='707' flags='1' bytes='29' iicount='18073'/>
<klass id='819' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='817' bci='13' reason='unloaded' action='reinterpret' index='5' klass='819'/>
<parse method='817' uses='18073' stamp='0.556'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='18073' cnt='18073' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='18073' not_taken='0' cnt='18073' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='99' live='94' memory='34760' stamp='0.556'/>
</parse>
<phase_done name='parse' nodes='100' live='62' stamp='0.556'/>
</phase>
<phase name='optimizer' nodes='100' live='62' stamp='0.556'>
<phase name='ccp' nodes='100' live='62' stamp='0.556'>
<phase_done name='ccp' nodes='100' live='62' stamp='0.556'/>
</phase>
<phase name='idealLoop' nodes='100' live='62' stamp='0.556'>
<phase_done name='idealLoop' nodes='100' live='62' stamp='0.556'/>
</phase>
<phase_done name='optimizer' nodes='104' live='63' stamp='0.556'/>
</phase>
<phase name='matcher' nodes='104' live='63' stamp='0.556'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.556'/>
</phase>
<phase name='regalloc' nodes='70' live='70' stamp='0.556'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.557'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.557'>
<phase_done name='output' nodes='94' live='86' stamp='0.557'/>
</phase>
<code_cache total_blobs='260' nmethods='6' adapters='168' free_code_cache='250547520'/>
<task_done success='1' nmsize='216' count='18074' stamp='0.557'/>
</task>
<task compile_id='29' method='java/lang/String getChars (II[CI)V' bytes='62' count='6765' iicount='6765' stamp='0.629'>
<phase name='parse' nodes='3' live='3' stamp='0.629'>
<type id='709' name='void'/>
<type id='707' name='int'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' compile_id='20' compiler='C1' level='3' iicount='6780'/>
<klass id='820' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='817' bci='36' reason='unloaded' action='reinterpret' index='5' klass='820'/>
<uncommon_trap method='817' bci='22' reason='unloaded' action='reinterpret' index='5' klass='820'/>
<uncommon_trap method='817' bci='4' reason='unloaded' action='reinterpret' index='5' klass='820'/>
<parse method='817' uses='6780' stamp='0.629'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='6780' not_taken='0' cnt='6780' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='6780' not_taken='0' cnt='6780' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='6780' not_taken='0' cnt='6780' prob='always'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='58'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='819' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='819' count='6268' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='95'/>
<parse_done nodes='187' live='181' memory='51688' stamp='0.629'/>
</parse>
<phase_done name='parse' nodes='189' live='129' stamp='0.629'/>
</phase>
<phase name='optimizer' nodes='189' live='129' stamp='0.629'>
<phase name='ccp' nodes='189' live='129' stamp='0.629'>
<phase_done name='ccp' nodes='189' live='129' stamp='0.629'/>
</phase>
<phase name='idealLoop' nodes='189' live='128' stamp='0.629'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.630'/>
</phase>
<phase name='idealLoop' nodes='189' live='125' stamp='0.630'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.630'/>
</phase>
<phase_done name='optimizer' nodes='195' live='128' stamp='0.630'/>
</phase>
<phase name='matcher' nodes='195' live='128' stamp='0.630'>
<phase_done name='matcher' nodes='118' live='118' stamp='0.631'/>
</phase>
<phase name='regalloc' nodes='158' live='158' stamp='0.631'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='198' live='185' stamp='0.633'/>
</phase>
<phase name='output' nodes='200' live='187' stamp='0.633'>
<phase_done name='output' nodes='219' live='199' stamp='0.633'/>
</phase>
<code_cache total_blobs='284' nmethods='28' adapters='170' free_code_cache='250502144'/>
<task_done success='1' nmsize='376' count='11150' stamp='0.633'/>
</task>
<task compile_id='30' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='6719' iicount='6719' stamp='0.633'>
<phase name='parse' nodes='3' live='3' stamp='0.634'>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='817' name='java/util/Arrays' flags='1'/>
<method id='818' holder='817' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' compile_id='22' compiler='C1' level='3' iicount='6719'/>
<klass id='823' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='818' bci='8' reason='unloaded' action='reinterpret' index='2' klass='823'/>
<parse method='818' uses='6719' stamp='0.634'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='6719' not_taken='0' cnt='6719' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='54'/>
<klass id='820' name='java/lang/Math' flags='17'/>
<method id='821' holder='820' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='6' compiler='C1' level='3' iicount='8798'/>
<call method='821' count='6207' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<type id='709' name='void'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='822' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='822' count='6207' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='114'/>
<parse_done nodes='223' live='220' memory='56288' stamp='0.634'/>
</parse>
<phase_done name='parse' nodes='225' live='156' stamp='0.634'/>
</phase>
<phase name='optimizer' nodes='225' live='156' stamp='0.634'>
<phase name='escapeAnalysis' nodes='225' live='155' stamp='0.634'>
<phase name='connectionGraph' nodes='226' live='156' stamp='0.634'>
<phase_done name='connectionGraph' nodes='226' live='156' stamp='0.634'/>
</phase>
<phase_done name='escapeAnalysis' nodes='226' live='156' stamp='0.634'/>
</phase>
<phase name='ccp' nodes='226' live='156' stamp='0.634'>
<phase_done name='ccp' nodes='226' live='156' stamp='0.634'/>
</phase>
<phase name='idealLoop' nodes='226' live='154' stamp='0.634'>
<phase_done name='idealLoop' nodes='226' live='154' stamp='0.634'/>
</phase>
<phase_done name='optimizer' nodes='281' live='193' stamp='0.635'/>
</phase>
<phase name='matcher' nodes='281' live='193' stamp='0.635'>
<phase_done name='matcher' nodes='187' live='187' stamp='0.635'/>
</phase>
<phase name='regalloc' nodes='234' live='234' stamp='0.635'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='294' live='281' stamp='0.636'/>
</phase>
<phase name='output' nodes='296' live='283' stamp='0.636'>
<phase_done name='output' nodes='308' live='291' stamp='0.637'/>
</phase>
<code_cache total_blobs='285' nmethods='29' adapters='170' free_code_cache='250500672'/>
<task_done success='1' nmsize='568' count='8367' inlined_bytes='11' stamp='0.637'/>
</task>
<task compile_id='31' method='java/lang/String &lt;init&gt; ([CII)V' bytes='62' count='8303' iicount='8303' stamp='0.637'>
<phase name='parse' nodes='3' live='3' stamp='0.637'>
<type id='709' name='void'/>
<klass id='806' name='[C' flags='1041'/>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='&lt;init&gt;' return='709' arguments='806 707 707' flags='1' bytes='62' compile_id='10' compiler='C1' level='3' iicount='8303'/>
<klass id='822' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='817' bci='38' reason='unloaded' action='reinterpret' index='5' klass='822'/>
<uncommon_trap method='817' bci='21' reason='unloaded' action='reinterpret' index='5' klass='822'/>
<uncommon_trap method='817' bci='8' reason='unloaded' action='reinterpret' index='5' klass='822'/>
<parse method='817' uses='8303' stamp='0.637'>
<bc code='183' bci='1'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<method id='819' holder='714' name='&lt;init&gt;' return='709' flags='1' bytes='1' iicount='19448'/>
<call method='819' count='7791' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='819' uses='8303' stamp='0.637'>
<parse_done nodes='52' live='51' memory='26840' stamp='0.637'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='8303' not_taken='0' cnt='8303' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='18'/>
<branch target_bci='30' taken='8303' not_taken='0' cnt='8303' prob='always'/>
<uncommon_trap bci='18' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='32'/>
<uncommon_trap bci='32' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='35'/>
<branch target_bci='49' taken='8303' not_taken='0' cnt='8303' prob='always'/>
<uncommon_trap bci='35' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='55'/>
<klass id='820' name='java/util/Arrays' flags='1'/>
<method id='821' holder='820' name='copyOfRange' return='806' arguments='806 707 707' flags='9' bytes='63' compile_id='30' compiler='C2' level='4' iicount='8367'/>
<call method='821' count='7791' prof_factor='1' inline='1'/>
<klass id='827' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='821' bci='8' reason='unloaded' action='reinterpret' index='2' klass='827'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='8303' stamp='0.637'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='8367' not_taken='0' cnt='8367' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='824' name='java/lang/Math' flags='17'/>
<method id='825' holder='824' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='6' compiler='C1' level='3' iicount='10445'/>
<call method='825' count='7854' prof_factor='0.992351' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='826' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='826' count='7854' prof_factor='0.992351' inline='1'/>
<intrinsic id='_arraycopy' nodes='114'/>
<parse_done nodes='300' live='293' memory='74184' stamp='0.638'/>
</parse>
<parse_done nodes='319' live='311' memory='77296' stamp='0.638'/>
</parse>
<phase_done name='parse' nodes='321' live='196' stamp='0.638'/>
</phase>
<phase name='optimizer' nodes='321' live='196' stamp='0.638'>
<phase name='escapeAnalysis' nodes='322' live='183' stamp='0.638'>
<phase name='connectionGraph' nodes='323' live='184' stamp='0.638'>
<phase_done name='connectionGraph' nodes='323' live='184' stamp='0.638'/>
</phase>
<phase_done name='escapeAnalysis' nodes='323' live='184' stamp='0.638'/>
</phase>
<phase name='ccp' nodes='323' live='184' stamp='0.638'>
<phase_done name='ccp' nodes='323' live='184' stamp='0.638'/>
</phase>
<phase name='idealLoop' nodes='323' live='182' stamp='0.638'>
<phase_done name='idealLoop' nodes='323' live='179' stamp='0.638'/>
</phase>
<phase name='idealLoop' nodes='323' live='179' stamp='0.638'>
<phase_done name='idealLoop' nodes='323' live='179' stamp='0.639'/>
</phase>
<phase_done name='optimizer' nodes='380' live='220' stamp='0.639'/>
</phase>
<phase name='matcher' nodes='380' live='220' stamp='0.639'>
<phase_done name='matcher' nodes='213' live='213' stamp='0.639'/>
</phase>
<phase name='regalloc' nodes='263' live='263' stamp='0.639'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='344' live='319' stamp='0.641'/>
</phase>
<phase name='output' nodes='346' live='321' stamp='0.641'>
<phase_done name='output' nodes='363' live='334' stamp='0.641'/>
</phase>
<code_cache total_blobs='287' nmethods='31' adapters='170' free_code_cache='250495872'/>
<task_done success='1' nmsize='664' count='8303' inlined_bytes='75' stamp='0.641'/>
</task>
<task compile_id='35' compile_kind='osr' method='com/ibeetl/code/jit/HelloWorld main ([Ljava/lang/String;)V' bytes='27' count='1' backedge_count='101543' iicount='1' osr_bci='10' stamp='0.671'>
<phase name='parse' nodes='3' live='3' stamp='0.672'>
<type id='709' name='void'/>
<klass id='818' name='[Ljava/lang/String;' flags='1041'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='819' holder='817' name='main' return='709' arguments='818' flags='9' bytes='27' compile_id='34' compiler='C1' level='3' iicount='1'/>
<parse method='819' uses='1' osr_bci='10' stamp='0.672'>
<dependency type='leaf_type' ctxk='817'/>
<dependency type='leaf_type' ctxk='817'/>
<uncommon_trap bci='10' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='13'/>
<branch target_bci='26' taken='0' not_taken='31960' cnt='31960' prob='never'/>
<uncommon_trap bci='13' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='17'/>
<method id='822' holder='817' name='sayHello' return='709' flags='1' bytes='26' compile_id='32' compiler='C2' level='4' iicount='40551'/>
<dependency type='unique_concrete_method' ctxk='817' x='822'/>
<call method='822' count='31960' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='822' uses='31960' stamp='0.672'>
<uncommon_trap bci='17' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='823' holder='817' name='getMessage' return='715' flags='33' bytes='3' compile_id='24' compiler='C1' level='1' iicount='41229'/>
<dependency type='unique_concrete_method' ctxk='817' x='823'/>
<call method='823' count='41197' prof_factor='0.788143' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='823' uses='32469' stamp='0.672'>
<parse_done nodes='172' live='166' memory='47872' stamp='0.672'/>
</parse>
<bc code='183' bci='9'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='824' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' compile_id='25' compiler='C1' level='3' iicount='41815'/>
<call method='824' count='41196' prof_factor='0.788143' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='9'/>
<bc code='182' bci='14'/>
<method id='826' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='83850'/>
<call method='826' count='41196' prof_factor='0.788143' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='14'/>
<bc code='182' bci='18'/>
<call method='826' count='41196' prof_factor='0.788143' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='21'/>
<method id='827' holder='780' name='toString' return='715' flags='1' bytes='17' compile_id='23' compiler='C1' level='3' iicount='41898'/>
<call method='827' count='41196' prof_factor='0.788143' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='21'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='300' live='291' memory='77976' stamp='0.672'/>
</parse>
<parse_done nodes='307' live='298' memory='79336' stamp='0.672'/>
</parse>
<replace_string_concat arguments='2' string_alloc='0' multiple='0'>
<jvms bci='5' method='822'/>
<jvms bci='17' method='819'/>
</replace_string_concat>
<uncommon_trap bci='5' reason='intrinsic' action='make_not_entrant'/>
<phase_done name='parse' nodes='485' live='219' stamp='0.672'/>
</phase>
<phase name='optimizer' nodes='485' live='219' stamp='0.672'>
<phase name='idealLoop' nodes='489' live='195' stamp='0.673'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='490' live='195' stamp='0.673'/>
</phase>
<phase name='escapeAnalysis' nodes='490' live='195' stamp='0.673'>
<phase name='connectionGraph' nodes='491' live='196' stamp='0.673'>
<phase_done name='connectionGraph' nodes='491' live='196' stamp='0.673'/>
</phase>
<phase_done name='escapeAnalysis' nodes='492' live='197' stamp='0.673'/>
</phase>
<eliminate_allocation type='715'>
<jvms bci='5' method='822'/>
<jvms bci='17' method='819'/>
</eliminate_allocation>
<phase name='idealLoop' nodes='492' live='171' stamp='0.673'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='497' live='168' stamp='0.673'/>
</phase>
<phase name='idealLoop' nodes='497' live='168' stamp='0.673'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='497' live='168' stamp='0.673'/>
</phase>
<phase name='idealLoop' nodes='497' live='168' stamp='0.673'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='497' live='168' stamp='0.673'/>
</phase>
<phase name='ccp' nodes='497' live='168' stamp='0.673'>
<phase_done name='ccp' nodes='497' live='168' stamp='0.673'/>
</phase>
<phase name='idealLoop' nodes='498' live='166' stamp='0.673'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='151' stamp='0.674'/>
</phase>
<phase name='idealLoop' nodes='498' live='151' stamp='0.674'>
<loop_tree>
<loop idx='489' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='151' stamp='0.674'/>
</phase>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='optimizer' nodes='633' live='263' stamp='0.674'/>
</phase>
<phase name='matcher' nodes='633' live='263' stamp='0.674'>
<phase_done name='matcher' nodes='213' live='213' stamp='0.674'/>
</phase>
<phase name='regalloc' nodes='269' live='269' stamp='0.674'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='341' live='308' stamp='0.675'/>
</phase>
<phase name='output' nodes='345' live='312' stamp='0.675'>
<phase_done name='output' nodes='359' live='324' stamp='0.676'/>
</phase>
<dependency type='leaf_type' ctxk='817'/>
<dependency type='unique_concrete_method' ctxk='817' x='822'/>
<dependency type='unique_concrete_method' ctxk='817' x='823'/>
<code_cache total_blobs='291' nmethods='35' adapters='170' free_code_cache='250483520'/>
<task_done success='1' nmsize='888' count='1' backedge_count='122383' inlined_bytes='29' stamp='0.676'/>
</task>
</compilation_log>
<compilation_log thread='17155'>
<start_compile_thread name='C2 CompilerThread0' thread='17155' process='79392' stamp='0.512'/>
<task compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='1476' backedge_count='30547' iicount='1476' stamp='0.549'>
<phase name='parse' nodes='3' live='3' stamp='0.549'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='hashCode' return='707' flags='1' bytes='55' iicount='1476'/>
<parse method='817' uses='1476' stamp='0.549'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='459' not_taken='695' cnt='1154' prob='0.397747'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='694' cnt='695' prob='0.00143885'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='694' not_taken='26587' cnt='27281' prob='0.0254389'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='694' not_taken='26587' cnt='26587' prob='0.0254389'/>
<parse_done nodes='189' live='183' memory='49896' stamp='0.550'/>
</parse>
<phase_done name='parse' nodes='190' live='123' stamp='0.550'/>
</phase>
<phase name='optimizer' nodes='190' live='123' stamp='0.550'>
<phase name='idealLoop' nodes='191' live='103' stamp='0.550'>
<loop_tree>
<loop idx='191' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='195' live='95' stamp='0.550'/>
</phase>
<phase name='idealLoop' nodes='195' live='95' stamp='0.550'>
<loop_tree>
<loop idx='200' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='221' live='101' stamp='0.550'/>
</phase>
<phase name='idealLoop' nodes='221' live='101' stamp='0.550'>
<loop_tree>
<loop idx='295' inner_loop='1' main_loop='295' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='317' live='171' stamp='0.550'/>
</phase>
<phase name='ccp' nodes='317' live='171' stamp='0.551'>
<phase_done name='ccp' nodes='317' live='171' stamp='0.551'/>
</phase>
<phase name='idealLoop' nodes='317' live='171' stamp='0.551'>
<loop_tree>
<loop idx='259' inner_loop='1' pre_loop='200' >
</loop>
<loop idx='350' inner_loop='1' main_loop='350' >
</loop>
<loop idx='232' inner_loop='1' post_loop='200' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='194' stamp='0.551'/>
</phase>
<phase name='idealLoop' nodes='380' live='194' stamp='0.551'>
<loop_tree>
<loop idx='259' inner_loop='1' pre_loop='200' >
</loop>
<loop idx='350' inner_loop='1' main_loop='350' >
</loop>
<loop idx='232' inner_loop='1' post_loop='200' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='386' live='180' stamp='0.551'/>
</phase>
<phase name='idealLoop' nodes='386' live='180' stamp='0.551'>
<loop_tree>
<loop idx='259' inner_loop='1' pre_loop='200' >
</loop>
<loop idx='350' inner_loop='1' main_loop='350' >
</loop>
<loop idx='232' inner_loop='1' post_loop='200' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='396' live='158' stamp='0.551'/>
</phase>
<phase_done name='optimizer' nodes='399' live='158' stamp='0.551'/>
</phase>
<phase name='matcher' nodes='399' live='158' stamp='0.551'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.552'/>
</phase>
<phase name='regalloc' nodes='177' live='177' stamp='0.552'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.552'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.553'>
<phase_done name='output' nodes='213' live='200' stamp='0.553'/>
</phase>
<code_cache total_blobs='258' nmethods='4' adapters='168' free_code_cache='250549440'/>
<task_done success='1' nmsize='376' count='1486' backedge_count='30841' stamp='0.553'/>
</task>
<task compile_id='9' method='java/lang/String indexOf (II)I' bytes='70' count='919' backedge_count='35896' iicount='919' stamp='0.595'>
<phase name='parse' nodes='3' live='3' stamp='0.595'>
<type id='707' name='int'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='715' name='indexOf' return='707' arguments='707 707' flags='1' bytes='70' iicount='919'/>
<parse method='817' uses='919' stamp='0.595'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='717' not_taken='0' cnt='717' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='579' not_taken='138' cnt='717' prob='0.807531'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='579' cnt='579' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='573' not_taken='31789' cnt='32362' prob='0.017706'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='31783' not_taken='6' cnt='31789' prob='0.999811'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='573' not_taken='31789' cnt='31783' prob='0.017706'/>
<parse_done nodes='183' live='173' memory='50080' stamp='0.596'/>
</parse>
<phase_done name='parse' nodes='184' live='128' stamp='0.596'/>
</phase>
<phase name='optimizer' nodes='184' live='128' stamp='0.596'>
<phase name='idealLoop' nodes='185' live='114' stamp='0.596'>
<loop_tree>
<loop idx='191' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='192' live='104' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='192' live='104' stamp='0.596'>
<loop_tree>
<loop idx='191' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='205' live='110' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='205' live='110' stamp='0.596'>
<loop_tree>
<loop idx='278' inner_loop='1' main_loop='278' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='300' live='186' stamp='0.596'/>
</phase>
<phase name='ccp' nodes='300' live='186' stamp='0.596'>
<phase_done name='ccp' nodes='300' live='186' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='300' live='186' stamp='0.596'>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='191' >
</loop>
<loop idx='323' inner_loop='1' main_loop='323' >
</loop>
<loop idx='216' inner_loop='1' post_loop='191' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='358' live='220' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='358' live='220' stamp='0.596'>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='191' >
</loop>
<loop idx='323' inner_loop='1' main_loop='323' >
</loop>
<loop idx='216' inner_loop='1' post_loop='191' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='363' live='208' stamp='0.597'/>
</phase>
<phase name='idealLoop' nodes='363' live='208' stamp='0.597'>
<loop_tree>
<loop idx='243' inner_loop='1' pre_loop='191' >
</loop>
<loop idx='323' inner_loop='1' main_loop='323' >
</loop>
<loop idx='216' inner_loop='1' post_loop='191' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='366' live='199' stamp='0.597'/>
</phase>
<phase_done name='optimizer' nodes='370' live='200' stamp='0.598'/>
</phase>
<phase name='matcher' nodes='370' live='200' stamp='0.598'>
<phase_done name='matcher' nodes='161' live='161' stamp='0.598'/>
</phase>
<phase name='regalloc' nodes='227' live='227' stamp='0.599'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='244' live='241' stamp='0.600'/>
</phase>
<phase name='output' nodes='244' live='241' stamp='0.600'>
<phase_done name='output' nodes='268' live='253' stamp='0.600'/>
</phase>
<code_cache total_blobs='265' nmethods='9' adapters='170' free_code_cache='250542592'/>
<task_done success='1' nmsize='408' count='919' backedge_count='35896' stamp='0.600'/>
</task>
<task compile_id='28' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='6232' iicount='6232' stamp='0.627'>
<phase name='parse' nodes='3' live='3' stamp='0.627'>
<klass id='778' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='817' holder='778' name='append' return='778' arguments='715' flags='1' bytes='50' compile_id='19' compiler='C1' level='3' iicount='6320'/>
<parse method='817' uses='6320' stamp='0.628'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='6320' not_taken='0' cnt='6320' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<type id='707' name='int'/>
<method id='819' holder='715' name='length' return='707' flags='1' bytes='6' compile_id='26' compiler='C1' level='1' iicount='8093'/>
<call method='819' count='5808' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='819' uses='6320' stamp='0.628'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='69' live='66' memory='30696' stamp='0.628'/>
</parse>
<bc code='183' bci='21'/>
<type id='709' name='void'/>
<method id='820' holder='778' name='ensureCapacityInternal' return='709' arguments='707' flags='2' bytes='16' compile_id='21' compiler='C1' level='3' iicount='6821'/>
<call method='820' count='5808' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='820' uses='6320' stamp='0.628'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='15' taken='6580' not_taken='241' cnt='6821' prob='0.964668'/>
<bc code='182' bci='12'/>
<method id='824' holder='778' name='expandCapacity' return='709' arguments='707' flags='0' bytes='50' iicount='478'/>
<dependency type='unique_concrete_method' ctxk='778' x='824'/>
<call method='824' count='224' prof_factor='0.92655' inline='1'/>
<klass id='737' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='824' bci='26' reason='unloaded' action='reinterpret' index='6' klass='737'/>
<inline_success reason='inline (hot)'/>
<parse method='824' uses='223' stamp='0.628'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='26'/>
<uncommon_trap bci='26' reason='unloaded' action='reinterpret' index='6'/>
<bc code='184' bci='43'/>
<klass id='806' name='[C' flags='1041'/>
<klass id='826' name='java/util/Arrays' flags='1'/>
<method id='827' holder='826' name='copyOf' return='806' arguments='806 707' flags='9' bytes='19' iicount='503'/>
<call method='827' count='-1' prof_factor='0.466527' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='827' uses='-1' stamp='0.628'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='829' name='java/lang/Math' flags='17'/>
<method id='830' holder='829' name='min' return='707' arguments='707 707' flags='9' bytes='11' compile_id='6' compiler='C1' level='3' iicount='6464'/>
<call method='830' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='714' name='java/lang/Object' flags='1'/>
<klass id='720' name='java/lang/System' flags='17'/>
<method id='831' holder='720' name='arraycopy' return='709' arguments='714 707 714 707 707' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='4737'/>
<call method='831' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='363' live='355' memory='87608' stamp='0.629'/>
</parse>
<parse_done nodes='378' live='369' memory='90856' stamp='0.629'/>
</parse>
<parse_done nodes='386' live='376' memory='94168' stamp='0.629'/>
</parse>
<bc code='182' bci='35'/>
<method id='821' holder='715' name='getChars' return='709' arguments='707 707 806 707' flags='1' bytes='62' compile_id='20' compiler='C1' level='3' iicount='6472'/>
<call method='821' count='5808' prof_factor='1' inline='1'/>
<klass id='833' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='821' bci='36' reason='unloaded' action='reinterpret' index='5' klass='833'/>
<uncommon_trap method='821' bci='22' reason='unloaded' action='reinterpret' index='5' klass='833'/>
<uncommon_trap method='821' bci='4' reason='unloaded' action='reinterpret' index='5' klass='833'/>
<inline_success reason='inline (hot)'/>
<parse method='821' uses='6320' stamp='0.629'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='6472' not_taken='0' cnt='6472' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='6472' not_taken='0' cnt='6472' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='6472' not_taken='0' cnt='6472' prob='always'/>
<bc code='184' bci='58'/>
<call method='831' count='5970' prof_factor='0.976514' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='537' live='523' memory='131616' stamp='0.629'/>
</parse>
<parse_done nodes='554' live='539' memory='135784' stamp='0.629'/>
</parse>
<phase_done name='parse' nodes='556' live='338' stamp='0.629'/>
</phase>
<phase name='optimizer' nodes='556' live='338' stamp='0.629'>
<phase name='escapeAnalysis' nodes='557' live='320' stamp='0.629'>
<phase name='connectionGraph' nodes='558' live='321' stamp='0.629'>
<phase_done name='connectionGraph' nodes='558' live='321' stamp='0.629'/>
</phase>
<phase_done name='escapeAnalysis' nodes='558' live='321' stamp='0.629'/>
</phase>
<phase name='ccp' nodes='558' live='321' stamp='0.629'>
<phase_done name='ccp' nodes='558' live='321' stamp='0.630'/>
</phase>
<phase name='idealLoop' nodes='558' live='319' stamp='0.630'>
<phase_done name='idealLoop' nodes='588' live='315' stamp='0.631'/>
</phase>
<phase name='idealLoop' nodes='588' live='315' stamp='0.631'>
<phase_done name='idealLoop' nodes='593' live='315' stamp='0.632'/>
</phase>
<phase_done name='optimizer' nodes='666' live='358' stamp='0.632'/>
</phase>
<phase name='matcher' nodes='666' live='358' stamp='0.632'>
<phase_done name='matcher' nodes='351' live='351' stamp='0.634'/>
</phase>
<phase name='regalloc' nodes='447' live='447' stamp='0.634'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='577' live='530' stamp='0.638'/>
</phase>
<phase name='output' nodes='577' live='530' stamp='0.638'>
<phase_done name='output' nodes='598' live='545' stamp='0.639'/>
</phase>
<dependency type='unique_concrete_method' ctxk='778' x='824'/>
<code_cache total_blobs='286' nmethods='30' adapters='170' free_code_cache='250497664'/>
<task_done success='1' nmsize='1048' count='14444' inlined_bytes='164' stamp='0.639'/>
</task>
<task compile_id='32' method='com/ibeetl/code/jit/HelloWorld sayHello ()V' bytes='26' count='6750' iicount='6750' stamp='0.639'>
<phase name='parse' nodes='3' live='3' stamp='0.639'>
<type id='709' name='void'/>
<klass id='817' name='com/ibeetl/code/jit/HelloWorld' flags='1'/>
<method id='818' holder='817' name='sayHello' return='709' flags='1' bytes='26' compile_id='27' compiler='C1' level='3' iicount='6750'/>
<parse method='818' uses='6750' stamp='0.639'>
<bc code='182' bci='1'/>
<klass id='715' name='java/lang/String' flags='17'/>
<method id='820' holder='817' name='getMessage' return='715' flags='33' bytes='3' compile_id='24' compiler='C1' level='1' iicount='6517'/>
<dependency type='unique_concrete_method' ctxk='817' x='820'/>
<call method='820' count='6238' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='820' uses='6750' stamp='0.639'>
<parse_done nodes='52' live='51' memory='27648' stamp='0.639'/>
</parse>
<bc code='183' bci='9'/>
<klass id='780' name='java/lang/StringBuilder' flags='17'/>
<method id='821' holder='780' name='&lt;init&gt;' return='709' flags='1' bytes='7' compile_id='25' compiler='C1' level='3' iicount='7073'/>
<call method='821' count='6238' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='9'/>
<bc code='182' bci='14'/>
<method id='823' holder='780' name='append' return='780' arguments='715' flags='1' bytes='8' compile_id='17' compiler='C1' level='3' iicount='14259'/>
<call method='823' count='6238' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='14'/>
<bc code='182' bci='18'/>
<call method='823' count='6237' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='21'/>
<method id='824' holder='780' name='toString' return='715' flags='1' bytes='17' compile_id='23' compiler='C1' level='3' iicount='7075'/>
<call method='824' count='6237' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='21'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='183' live='179' memory='51120' stamp='0.640'/>
</parse>
<replace_string_concat arguments='2' string_alloc='0' multiple='0'>
<jvms bci='5' method='818'/>
</replace_string_concat>
<uncommon_trap bci='5' reason='intrinsic' action='make_not_entrant'/>
<phase_done name='parse' nodes='363' live='136' stamp='0.640'/>
</phase>
<phase name='optimizer' nodes='363' live='136' stamp='0.640'>
<phase name='escapeAnalysis' nodes='363' live='118' stamp='0.640'>
<phase name='connectionGraph' nodes='364' live='119' stamp='0.640'>
<phase_done name='connectionGraph' nodes='364' live='119' stamp='0.640'/>
</phase>
<phase_done name='escapeAnalysis' nodes='365' live='120' stamp='0.640'/>
</phase>
<eliminate_allocation type='715'>
<jvms bci='5' method='818'/>
</eliminate_allocation>
<phase name='ccp' nodes='368' live='94' stamp='0.640'>
<phase_done name='ccp' nodes='368' live='94' stamp='0.640'/>
</phase>
<phase name='idealLoop' nodes='368' live='94' stamp='0.640'>
<phase_done name='idealLoop' nodes='368' live='94' stamp='0.640'/>
</phase>
<dependency type='leaf_type' ctxk='817'/>
<phase_done name='optimizer' nodes='502' live='207' stamp='0.640'/>
</phase>
<phase name='matcher' nodes='502' live='207' stamp='0.640'>
<phase_done name='matcher' nodes='158' live='158' stamp='0.641'/>
</phase>
<phase name='regalloc' nodes='198' live='198' stamp='0.641'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='221' live='215' stamp='0.641'/>
</phase>
<phase name='output' nodes='225' live='219' stamp='0.641'>
<phase_done name='output' nodes='235' live='227' stamp='0.642'/>
</phase>
<dependency type='leaf_type' ctxk='817'/>
<dependency type='unique_concrete_method' ctxk='817' x='820'/>
<code_cache total_blobs='288' nmethods='32' adapters='170' free_code_cache='250494464'/>
<task_done success='1' nmsize='728' count='8387' inlined_bytes='3' stamp='0.642'/>
</task>
</compilation_log>
<hotspot_log_done stamp='1.182'/>
</hotspot_log>
